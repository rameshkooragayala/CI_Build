<?xml version="1.0"?>
<doc>
<assembly>
<name>
IEX.ElementaryActions.Functionality
</name>
</assembly>
<members>
<member name="M:IEX.ElementaryActions.Functionality.EAImplementation.NavigateToArchive.#ctor(IEX.ElementaryActions.Functionality.Manager)">
	<param name="pManager">Manager</param>
	<remarks>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.NavigateToArchive">
	<summary>
  Navigates To Archive
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.VerifySortingInArchive.#ctor(IEX.ElementaryActions.Functionality.EnumSortBy,IEX.ElementaryActions.Functionality.Manager)">
	<param name="SortBy">Enum Can Be SortBy Time Or A-Z</param>
	<param name="pManager">Manager</param>
	<remarks>
 Possible Error Codes:
 <para>300 - NavigationFailure</para>
		<para>301 - DictionaryFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>306 - GetEventInfoFailure</para>
		<para>328 - INIFailure</para>
		<para>321 - VerifyChannelAttributeFailure</para>
		<para>332 - NoValidParameters</para>
		<para>338 - EventNotExistsFailure</para>
		<para>346 - FindEventFailure</para>
		<para>347 - SelectEventFailure</para>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.VerifySortingInArchive">
	<summary>
   Verify Sorting On Archive Screen
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.BookReminderFromBanner.#ctor(System.String,System.Int32,System.Boolean,IEX.ElementaryActions.Functionality.Manager)">
	<param name="EventKeyName">Key Of The Event</param>
	<param name="MinTimeBeforeEvStart">Optional Parameter Default = 2 : Minimum Time Left For The Event To Start ( EXAMPLE : For Guard Time )</param>
	<param name="VerifyBookingInPCAT">Optional Parameter Default = True : If True Verifies Event Booked In PCAT</param>
	<param name="pManager">Manager</param>
	<remarks>
 Possible Error Codes:
 <para>305 - PCATFailure</para>
		<para>311 - SetEventReminderFailure</para>
		<para>328 - INIFailure</para>
		<para>332 - NoValidParameters</para>
		<para>334 - VideoNotPresent</para>
		<para>337 - ParseEventTimeFailure</para>
		<para>347 - SelectEventFailure</para>
		<para>349 - ReturnToLiveFailure</para>
		<para>350 - ParsingFailure</para>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.BookReminderFromBanner">
	<summary>
  Adding Reminder From Action Bar
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.RentFuturePPVEventFromBanner.#ctor(IEX.ElementaryActions.Functionality.Manager)">
	<remarks>
 Possible Error Codes:
 <para>304 - IRVerificationFailure</para>
		<para>328 - INIFailure</para>
		<para>347 - SelectEventFailure</para>
		<para>369 - RentPPVEventFailure</para>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.RentFuturePPVEventFromBanner">
	<summary>
   Renting Future PPV Event From Banner
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.EnterPIN.#ctor(System.String,System.String,IEX.ElementaryActions.Functionality.Manager)">
	<param name="PIN">PIN Requested To Enter</param>
	<param name="NextState">The Next State After Entering PIN</param>
	<param name="pManager">Manager</param>
	<remarks>
 Possible Error Codes:
 <para>300 - NavigationFailure</para>
		<para>301 - DictionaryFailure</para>
		<para>302 - EmptyEpgInfoFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>322 - VerificationFailure</para>
		<para>328 - INIFailure</para>
		<para>332 - NoValidParameters</para>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.EnterPIN">
	<summary>
   Enters The PIN
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.UnlockEvent.#ctor(IEX.ElementaryActions.Functionality.Manager)">
	<param name="pManager">Manager</param>
	<remarks>
 Possible Error Codes:
 <para>303 - FasVerificationFailure</para>
		<para>328 - INIFailure</para>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.UnlockEvent">
	<summary>
   UnLocks Events From A Locked Channel
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.CancelReminderFromGuide.#ctor(System.String,System.Boolean,System.Boolean,IEX.ElementaryActions.Functionality.Manager)">
	<param name="EventKeyName">Key Of The Event</param>
	<param name="VerifyCanceledInPCAT">Optional Parameter Default = True : If True Verifies Event Canceled In PCAT</param>
	<param name="ReturnToLive">Optional Parameter Default = True : If True Returns To Live Viewing</param>
	<param name="pManager">Manager</param>
	<remarks>
 Possible Error Codes:
 <para>300 - NavigationFailure</para>
		<para>301 - DictionaryFailure</para>
		<para>302 - EmptyEpgInfoFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>305 - PCATFailure</para>
		<para>306 - GetEventInfoFailure</para>
		<para>322 - VerificationFailure</para>
		<para>328 - INIFailure</para>
		<para>330 - TelnetFailure</para>
		<para>331 - CopyFileFailure</para>
		<para>332 - NoValidParameters</para>
		<para>334 - VideoNotPresent</para>
		<para>338 - EventNotExistsFailure</para>
		<para>346 - FindEventFailure</para>
		<para>347 - SelectEventFailure</para>
		<para>349 - ReturnToLiveFailure</para>
		<para>355 - TuneToChannelFailure</para>
		<para>368 - CancelReminderFailure</para>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.CancelReminderFromGuide">
	<summary>
    Cancelling Reminder From Guide
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.DeleteTelnetLog.#ctor(IEX.ElementaryActions.Functionality.Manager)">
	<param name="pManager">Manager</param>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.DeleteTelnetLog">
	<summary>
   Delete TelnetLog.txt From BuildWinPath
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.ChangeLogFileName.#ctor(System.String,IEX.ElementaryActions.Functionality.Manager)">
	<param name="LogPath">The Path Of The IEX Log</param>
	<param name="pManager">Manager</param>
	<remarks>
 Possible Error Codes:
 <para>329 - IEXSystemError</para>
		<para>332 - NoValidParameters</para>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.ChangeLogFileName">
	<summary>
 In case of executing from Iexecuter the this function is taking care that a new folder
 under the name of the test with time stamp will create for the 
 log in the path alocated for the logs in the XML file
 By this every execution of the same test will create a new log file
 and the log will be located in the local machine and not in the tests folder (shared drive in most of the cases)
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.SearchVodEvent.#ctor(System.String,System.Boolean,IEX.ElementaryActions.Functionality.Manager)">
	<param name="EventName">The Event Name To Find</param>
	<param name="Navigate">If True Navigates To VOD</param>
	<param name="pManager">Manager</param>
	<remarks>
 Possible Error Codes:
 <para>300 - NavigationFailure</para>
		<para>302 - EmptyEpgInfoFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>322 - VerificationFailure</para>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.SearchVodEvent">
	<summary>
   Search Event In VOD
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.VerifyEventInArchive.#ctor(System.String,System.Boolean,System.Boolean,System.String,System.String,System.String,IEX.ElementaryActions.Functionality.Manager)">
	<param name="EventKeyName">Key Of The Event</param>
	<param name="Navigate">Optional Parameter Default = True : If True Navigates To Archive</param>
	<param name="SupposedToFindEvent">Optional Parameter Default = True : If True Tries To Find Event On Archive Else Tries Not To Find It</param>
	<param name="pManager">Manager</param>
	<remarks>
 Possible Error Codes:
 <para>300 - NavigationFailure</para>
		<para>301 - DictionaryFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>306 - GetEventInfoFailure</para>
		<para>328 - INIFailure</para>
		<para>321 - VerifyChannelAttributeFailure</para>
		<para>332 - NoValidParameters</para>
		<para>338 - EventNotExistsFailure</para>
		<para>346 - FindEventFailure</para>
		<para>347 - SelectEventFailure</para>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.VerifyEventInArchive">
	<summary>
   Verify Event On Archive Screen
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.UnlockEventFromArchive.#ctor(System.String,System.Boolean,IEX.ElementaryActions.Functionality.Manager)">
	<param name="EventKeyName">Key Of The Event</param>
	<param name="ReturnToLive">Optional Parameter Default = True : If True Returns To Live Viewing</param>
	<param name="pManager">Manager</param>
	<remarks>
 Possible Error Codes:
 <para>300 - NavigationFailure</para>
		<para>301 - DictionaryFailure</para>
		<para>302 - EmptyEpgInfoFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>306 - GetEventInfoFailure</para>
		<para>321 - VerifyChannelAttributeFailure</para>
		<para>322 - VerificationFailure</para>
		<para>328 - INIFailure</para>
		<para>332 - NoValidParameters</para>
		<para>334 - VideoNotPresent</para>
		<para>338 - EventNotExistsFailure</para>
		<para>346 - FindEventFailure</para>
		<para>347 - SelectEventFailure</para>
		<para>349 - ReturnToLiveFailure</para>
		<para>359 - LockUnlockFailure</para>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.UnlockEventFromArchive">
	<summary>
   UnLock Event From Archive
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.CheckForAudio.#ctor(System.Boolean,System.Int32,IEX.ElementaryActions.Functionality.Manager)">
	<param name="IsPresent">If True Audio Present Else No Audio Present</param>
	<param name="Timeout">Timeout To Check For Audio Presence</param>
	<param name="pManager">Manager</param>
	<remarks>
 Possible Error Codes:
 <para>335 - AudioPresent</para>
		<para>336 - AudioNotPresent</para>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.CheckForAudio">
	<summary>
   Checks If Audio Is Present Or Not Present
 </summary>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.UnsetAllFavChannels">
	<summary>
   Setting/Unsetting 1 Or More Channel(s) As/From Favorite
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.RecordCurrentEventFromGuide.#ctor(System.String,System.String,System.Int32,System.Boolean,System.Boolean,System.Boolean,IEX.ElementaryActions.Functionality.Manager)">
	<param name="EventKeyName">Key Of The Event</param>
	<param name="ChannelNumber">Channel Of The Event To Be Recorded</param>
	<param name="MinTimeBeforeEvEnd">Optional Parameter Default = -1 : Minutes Required Until End Of Event</param>
	<param name="VerifyBookingInPCAT">Optional Parameter Default = True : If True Verifies Event Booked In PCAT</param>
	<param name="ReturnToLive">Optional Parameter Default = True : If True Returns To Live Viewing</param>
	<param name="IsConflict">Optional Parameter Default = False : If True Verify Conflict Appeared Before Recording Is Confirmed</param>
	<param name="pManager">Manager</param>
	<remarks>
 Possible Error Codes:
 <para>301 - DictionaryFailure</para>
		<para>302 - EmptyEpgInfoFailure</para>
		<para>305 - PCATFailure</para>
		<para>328 - INIFailure</para>
		<para>330 - TelnetFailure</para>
		<para>331 - CopyFileFailure</para>
		<para>332 - NoValidParameters</para>
		<para>334 - VideoNotPresent</para>
		<para>339 - RecordEventFailure</para>
		<para>344 - ConflictFailure</para>
		<para>349 - ReturnToLiveFailure</para>
		<para>350 - ParsingFailure</para>
		<para>355 - TuneToChannelFailure</para>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.RecordCurrentEventFromGuide">
	<summary>
   Recording Current Event From Guide
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.VerifyEventInPlanner.#ctor(System.String,System.Boolean,System.Boolean,System.String,System.String,System.String,IEX.ElementaryActions.Functionality.Manager)">
	<param name="EventKeyName">Key Of The Event</param>
	<param name="Navigate">Optional Parameter Default = True : If True Navigates To Planner</param>
	<param name="SupposedToFindEvent">Optional Parameter Default = True : If True Tries To Find Event On Planner Else Tries Not To Find It</param>
	<param name="pManager">Manager</param>
	<remarks>
 Possible Error Codes:
 <para>300 - NavigationFailure</para>
		<para>301 - DictionaryFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>306 - GetEventInfoFailure</para>
		<para>321 - VerifyChannelAttributeFailure</para>
		<para>328 - INIFailure</para>
		<para>332 - NoValidParameters</para>
		<para>338 - EventNotExistsFailure</para>
		<para>346 - FindEventFailure</para>
		<para>347 - SelectEventFailure</para>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.VerifyEventInPlanner">
	<summary>
   Verify Event On Planner Screen
 </summary>
</member><member name="P:IEX.ElementaryActions.Functionality.My.Resources.Resources.ResourceManager">
	<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member><member name="P:IEX.ElementaryActions.Functionality.My.Resources.Resources.Culture">
	<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member><member name="T:IEX.ElementaryActions.Functionality.My.Resources.Resources">
	<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.AddToFavouritesFromBanner.#ctor(IEX.ElementaryActions.Functionality.Manager)">
	<param name="pManager">Manager</param>
	<remarks>
 Possible Error Codes:
 <para>301 - DictionaryFailure</para>
		<para>322 - VerificationFailure</para>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.AddToFavouritesFromBanner">
	<summary>
   Adds to Favourites From Action Bar 
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.VerifyEventSchedule.#ctor(IEX.ElementaryActions.Functionality.EnumEventOccures,System.String,IEX.ElementaryActions.Functionality.Manager)">
	<param name="EventOccures">Can Be : Past,Current Or Future</param>
	<param name="EventTimes">Event Time In Format HH:MM - HH:MM</param>
	<param name="pManager">Manager</param>
	<remarks>
 Possible Error Codes:
 <para>309 - GetEpgTimeFailure</para>
		<para>350 - ParsingFailure</para>
		<para>362 - TimeFailure </para>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.VerifyEventSchedule">
	<summary>
   Compares Current EPG Time And Given Event Times
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.SetUnsetFavoriteChannelNameList.#ctor(System.String,IEX.ElementaryActions.Functionality.EnumFavouriteIn,System.Boolean,IEX.ElementaryActions.Functionality.Manager)">
	<param name="ChannelNameList">Requested Channel Name(s) - If Several Channel Names Then Use Comma As Separator</param>
	<param name="SetAsFavorite">True to Set favorite(s), False to Unset favorite(s)</param>
	<param name="pManager">Manager</param>
	<remarks>
 Possible Error Codes:
 <para>300 - NavigationFailure</para>
		<para>302 - EmptyEpgInfoFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>314 - SetSettingsFailure</para>
		<para>332 - NoValidParameters</para>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.SetUnsetFavoriteChannelNameList">
	<summary>
   Setting/Unsetting 1 Or More Channel(s) As/From Favorite
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.CopyLogSerial.#ctor(System.String,IEX.ElementaryActions.Functionality.Manager)">
	<param name="FileName">Optional Parameter Default = "Diag_TelnetLog.txt" : Filename Of The Log File</param>
	<param name="pManager">Manager</param>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.CopyLogSerial">
	<summary>
   Copies TelnetLog.txt From BuildWinPath To Log Folder
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.CopyLogTelnet.#ctor(System.String,IEX.ElementaryActions.Functionality.Manager)">
	<param name="FileName">Optional Parameter Default = "Diag_TelnetLog.txt" : Filename Of The Log File</param>
	<param name="pManager">Manager</param>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.CopyLogTelnet">
	<summary>
   Copies TelnetLog.txt From BuildWinPath To Log Folder
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.PlaybackRecFromArchive.#ctor(System.String,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.String,System.String,System.String,IEX.ElementaryActions.Functionality.Manager)">
	<param name="EventKeyName">Key Of The Event</param>
	<param name="SecToPlay">Seconds To Play If 0 And VerifyEOF Is True Playes Until End Else If Verify EOF Is False Exit The EA.If SecToPlay Is Not Equal To 0 Then Plays The Event SecToPlay And StopPlayback</param>
	<param name="FromBeginning">If Already Played To Play From The Beginning Or Last Viewed</param>
	<param name="VerifyEOF">If True Verify Playback Until End</param>
	<param name="EnterPIN">If True Enters PIN When Selecting Event For Playback</param>
	<param name="pManager">Manager</param>
	<remarks>
 Possible Error Codes:
 <para>300 - NavigationFailure</para>
		<para>301 - DictionaryFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>305 - PCATFailure</para>
		<para>306 - GetEventInfoFailure</para>
		<para>328 - INIFailure</para>
		<para>320 - VerifyEofBofFailure</para>
		<para>321 - VerifyChannelAttributeFailure</para>
		<para>322 - VerificationFailure</para>
		<para>328 - INIFailure</para>
		<para>330 - TelnetFailure</para>
		<para>331 - CopyFileFailure</para>
		<para>332 - NoValidParameters</para>
		<para>338 - EventNotExistsFailure</para>
		<para>340 - PlayEventFailure</para>
		<para>343 - StopPlayEventFailure</para>
		<para>346 - FindEventFailure</para>
		<para>347 - SelectEventFailure</para>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.PlaybackRecFromArchive">
	<summary>
   Playback Event From Archive 
   If SecToPlay=0 And VerifyEOF=False Then Plays The Event And Exit The EA
   If SecToPlay=0 And VerifyEOF=True Then Plays The Event Until End And Verifies EOF Then Exit EA 
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.ChannelSurfWithSubtitles.#ctor(System.String,System.Boolean,System.Int32,IEX.ElementaryActions.Functionality.EnumPredicted,IEX.ElementaryActions.Functionality.Manager)">
	<param name="ChannelNumber">Optional Parameter Default = "" : Channel Number</param>
	<param name="IsNext">Optional Parameter Default = True : If True Surfs To Next Channel Else To Previous</param>
	<param name="NumberOfPresses">Optional Parameter Default = 1 : Number Of Channels To Surf Up OR Down</param>
	<param name="IsPredicted">Optional Parameter Default = True : If The Next Or Previous Channel Is Predicted</param>
	<param name="pManager">Manager</param>
	<remarks>
 Possible Error Codes:
 <para>301 - DictionaryFailure</para>
		<para>322 - VerificationFailure</para>
		<para>328 - INIFailure</para>
		<para>332 - NoValidParameters</para>
		<para>334 - VideoNotPresent</para>
		<para>349 - ReturnToLiveFailure</para>
		<para>351 - SurfingFailure</para>
		<para>355 - TuneToChannelFailure</para>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.ChannelSurfWithSubtitles">
	<summary>
   Surfs Channel Up Down Or DCA On Live With Subtitles
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.HandleReminder.#ctor(System.String,IEX.ElementaryActions.Functionality.EnumReminderActions,IEX.ElementaryActions.Functionality.Manager)">
	<param name="EventKeyName">The Key Of The Event</param>
	<param name="Action">Can Be : Accept,Reject,Ignore Or Wait</param>
	<param name="pManager">Manager</param>
	<remarks>
 Possible Error Codes:
 <para>302 - EmptyEpgInfoFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>308 - GetChannelFailure</para>
		<para>322 - VerificationFailure</para>
		<para>332 - NoValidParameters</para>
		<para>338 - EventNotExistsFailure</para>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.HandleReminder">
	<summary>
   Handles Reminder
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.TuneToRadioChannel.#ctor(System.String,IEX.ElementaryActions.Functionality.Manager)">
	<param name="ChannelNumber">The Channel Number</param>
	<param name="pManager">Manager</param>
	<remarks>
		<para>301 - DictionaryFailure</para>
		<para>322 - VerificationFailure</para>
		<para>328 - INIFailure</para>
		<para>333 - VideoPresent</para>
		<para>334 - VideoNotPresent</para>
		<para>335 - AudioPresent</para>
		<para>336 - AudioNotPresent</para>
		<para>349 - ReturnToLiveFailure</para>
		<para>351 - SurfingFailure</para>
		<para>355 - TuneToChannelFailure</para>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.TuneToRadioChannel">
	<summary>
   Tune To Radio Channel
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.BookReminderFromGuide.#ctor(System.String,System.String,System.Int32,System.Int32,System.Boolean,System.Boolean,IEX.ElementaryActions.Functionality.Manager)">
	<param name="EventKeyName">Key Of The Event</param>
	<param name="ChannelNumber">Channel Of The Event To Be Added As Reminder</param>
	<param name="NumberOfPresses">Optional Parameter Default = 1 : Number Of Right Presses From Current Event</param>
	<param name="MinTimeBeforeEvStart">Optional Parameter Default = 2 : Minimum Time Left For The Event To Start ( EXAMPLE : For Guard Time )</param>
	<param name="VerifyBookingInPCAT">Optional Parameter Default = True : If True Verifies Event Booked In PCAT</param>
	<param name="ReturnToLive">Optional Parameter Default = True : If True Returns To Live Viewing</param>
	<param name="pManager">Manager</param>
	<remarks>
 Possible Error Codes:
 <para>305 - PCATFailure</para>
		<para>306 - GetEventInfoFailure</para>
		<para>323 - VerifyStateFailure</para>
		<para>328 - INIFailure</para>
		<para>332 - NoValidParameters</para>
		<para>334 - VideoNotPresent</para>
		<para>339 - RecordEventFailure</para>
		<para>344 - ConflictFailure</para>
		<para>347 - SelectEventFailure</para>
		<para>349 - ReturnToLiveFailure</para>
		<para>350 - ParsingFailure</para>
		<para>355 - TuneToChannelFailure</para>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.BookReminderFromGuide">
	<summary>
   Adding Reminder From Guide
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.HealthCheck.#ctor(System.String,IEX.ElementaryActions.Manager)">
	<param name="ChannelNumber">Channel Number To Tune To</param>
	<param name="pManager">Manager</param>
	<remarks></remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.HealthCheck">
	<summary>
    Do STB Health Check By Checking Tune To Channel,Checking For Video,Navigate And Get Event Name From Guide And Lunching The Action Bar
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.SetBannerDisplayTime.#ctor(IEX.ElementaryActions.Functionality.EnumChannelBarTimeout,IEX.ElementaryActions.Functionality.Manager)">
	<param name="DisplayInSec">Banner Display In Seconds : 5 , 7 or 10</param>
	<param name="pManager">Manager</param>
	<remarks>
 Possible Error Codes:
 <para>301 - DictionaryFailure</para>
		<para>302 - EmptyEpgInfoFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>314 - SetSettingsFailure</para>
		<para>334 - VideoNotPresent</para>
		<para>349 - ReturnToLiveFailure</para>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.SetBannerDisplayTime">
	<summary>
   Sets Banner Display Time On Stb Settings
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.BookFutureEventFromGuide.#ctor(System.String,System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,IEX.ElementaryActions.Functionality.Manager)">
	<param name="EventKeyName">Key Of The Event</param>
	<param name="ChannelNumber">Channel Of The Event To Be Recorded</param>
	<param name="StartTime">Requested Exact Event Start Time</param>
	<param name="EndTime">Requested Exact Event Start Time</param>
	<param name="MinEventLength">Minimum Event Length</param>
	<param name="MaxEventLength">Max Event Length</param>
	<param name="DaysDelay">Days Delay On Guide - Not Yet Supported</param>
	<param name="NumberOfPresses">Optional Parameter Default = 1 : Number Of Right Presses From Current Event</param>
	<param name="MinTimeBeforeEvStart">Optional Parameter Default = 1 : Minimum Time Right For The Event To Start ( EXAMPLE : For Guard Time )</param>
	<param name="VerifyBookingInPCAT">Optional Parameter Default = True : If True Verifies Event Booked In PCAT</param>
	<param name="ReturnToLive">Optional Parameter Default = True : If True Returns To Live Viewing</param>
	<param name="IsConflict">Optional Parameter Default = True : If True Verify Conflict Appeared Before Recording Is Confirmed</param>
	<param name="pManager">Manager</param>
	<remarks>
 Possible Error Codes:
 <para>300 - NavigationFailure</para>
		<para>301 - DictionaryFailure</para>
		<para>302 - EmptyEpgInfoFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>305 - PCATFailure</para>
		<para>306 - GetEventInfoFailure</para>
		<para>323 - VerifyStateFailure</para>
		<para>328 - INIFailure</para>
		<para>330 - TelnetFailure</para>
		<para>331 - CopyFileFailure</para>
		<para>332 - NoValidParameters</para>
		<para>334 - VideoNotPresent</para>
		<para>339 - RecordEventFailure</para>
		<para>344 - ConflictFailure</para>
		<para>346 - FindEventFailure</para>
		<para>347 - SelectEventFailure</para>
		<para>349 - ReturnToLiveFailure</para>
		<para>350 - ParsingFailure</para>
		<para>355 - TuneToChannelFailure</para>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.BookFutureEventFromGuide">
	<summary>
   Booking Future Event From Guide
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.RentCurrentPPVEventFromBanner.#ctor(IEX.ElementaryActions.Functionality.Manager)">
	<remarks>
 Possible Error Codes:
 <para>304 - IRVerificationFailure</para>
		<para>328 - INIFailure</para>
		<para>347 - SelectEventFailure</para>
		<para>369 - RentPPVEventFailure</para>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.RentCurrentPPVEventFromBanner">
	<summary>
   Renting Current PPV Event From Banner
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.CheckForVideo.#ctor(System.String,System.Boolean,System.Boolean,System.Int32,System.Boolean,IEX.ElementaryActions.Functionality.Manager)">
	<param name="Coordinates">The Check For Video Coordinates In Format : xxx yyy www hhh</param>
	<param name="IsPresent">If True Video Present Else No Video Present</param>
	<param name="CheckFullArea">If True Checks As Much As Possible Of The Screen Else Checks Top Left Corner</param>
	<param name="Timeout">Timeout To Check For Video Presence</param>
	<param name="pManager">Manager</param>
	<remarks>
 Possible Error Codes:
 <para>333 - VideoPresent</para>
		<para>334 - VideoNotPresent</para>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.CheckForVideo">
	<summary>
    Checks If Video Is Present Or Not Present
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.SetGuardTime.#ctor(System.Boolean,IEX.ElementaryActions.Functionality.EnumGuardTime,IEX.ElementaryActions.Functionality.EnumGuardTime,IEX.ElementaryActions.Functionality.Manager)">
	<param name="IsStart">If True Sets START Else Sets End</param>
	<param name="GTCurrentVal">The Current Value Expected On Guard Time</param>
	<param name="GTValueToSet">If GTCurrent Is NOT_AVAILABLE Sets The Value</param>
	<param name="pManager">Manager</param>
	<remarks>
 Possible Error Codes:
 <para>301 - DictionaryFailure</para>
		<para>302 - EmptyEpgInfoFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>314 - SetSettingsFailure</para>
		<para>322 - VerificationFailure</para>
		<para>332 - NoValidParameters</para>
		<para>334 - VideoNotPresent</para>
		<para>349 - ReturnToLiveFailure</para>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.SetGuardTime">
	<summary>
   Sets Start/End Guard Time On Stb Settings
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.SetSubtitlesPrefs.#ctor(System.Boolean,IEX.ElementaryActions.Functionality.EnumLanguage,IEX.ElementaryActions.Functionality.Manager)">
	<param name="AreSubtitlesOn">If True Sets To ON Else To OFF</param>
	<param name="LanguageToSet">If Empty Default Else Sets Language</param>
	<param name="pManager">Manager</param>
	<remarks>
 Possible Error Codes:
 <para>301 - DictionaryFailure</para>
		<para>302 - EmptyEpgInfoFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>314 - SetSettingsFailure</para>
		<para>332 - NoValidParameters</para>
		<para>334 - VideoNotPresent</para>
		<para>349 - ReturnToLiveFailure</para>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.SetSubtitlesPrefs">
	<summary>
  Sets Subtitles On Stb Settings
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.ResolveConflict.#ctor(System.String,System.String,System.Boolean,System.Int32,IEX.ElementaryActions.Functionality.Manager)">
	<param name="EventKeyName">Key Of The Event</param>
	<param name="ResolveOption">Use: DEFER, AUTOMATICALLY, MANUALLY, CANCEL BOOKING</param>
	<param name="VerifyInPCAT">If True Verifies Event Booked or Canceled In PCAT</param>
	<param name="EventToCancel">Optional Parameter Default = 1 : Not Implemented</param>
	<param name="pManager">Manager</param>
	<remarks>
 Possible Error Codes:
 <para>301 - DictionaryFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>305 - PCATFailure</para>
		<para>328 - INIFailure</para>
		<para>330 - TelnetFailure</para>
		<para>331 - CopyFileFailure</para>
		<para>332 - NoValidParameters</para>
		<para>338 - EventNotExistsFailure</para>
		<para>339 - RecordEventFailure</para>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.ResolveConflict">
	<summary>
  Resolves recording and booking conflicts
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.TearDown.#ctor(IEX.ElementaryActions.Functionality.Manager)">
	<param name="pManager">Manager</param>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.TearDown">
	<summary>
   Replace The TearDown Function Of The UserLib
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.WaitUntilEventEnds.#ctor(System.String,System.String,IEX.ElementaryActions.Functionality.Manager)">
	<param name="EventKeyName">Key Of The Event</param>
	<param name="pManager">Manager</param>
	<remarks>
 Possible Error Codes:
 <para>301 - DictionaryFailure</para>
		<para>309 - GetEpgTimeFailure</para>
		<para>332 - NoValidParameters</para>
		<para>334 - VideoNotPresent</para>
		<para>338 - EventNotExistsFailure</para>
		<para>349 - ReturnToLiveFailure</para>
		<para>350 - ParsingFailure</para>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.WaitUntilEventEnds">
	<summary>
  Waits Until Event Ends
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.LockChannelFromBanner.#ctor(System.Boolean,IEX.ElementaryActions.Functionality.Manager)">
	<param name="pManager">Manager</param>
	<remarks>
 Possible Error Codes:
 <para>303 - FasVerificationFailure</para>
		<para>328 - INIFailure</para>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.LockChannelFromBanner">
	<summary>
   Locks Channel From Action Bar
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.ChannelBarSurfFuture.#ctor(System.Boolean,System.Int32,IEX.ElementaryActions.Functionality.Manager)">
	<param name="IsNext">If True Surfs To Next Channel Else To Previous</param>
	<param name="NumberOfPressesUpDown">Optional Parameter Default = 1 : Number Of Surfs</param>
	<param name="pManager">Manager</param>
	<remarks>
 Possible Error Codes:
 <para>328 - INIFailure</para>
		<para>347 - SelectEventFailure</para>
		<para>351 - SurfingFailure</para>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.ChannelBarSurfFuture">
	<summary>
   Surfs Channel Up Or Down And Then To Next Event In ChannelBar
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.StopRecordingFromBanner.#ctor(System.String,IEX.ElementaryActions.Functionality.Manager)">
	<param name="EventKeyName">Key Of The Event</param>
	<param name="pManager">Manager</param>
	<remarks>
 Possible Error Codes:
 <para>301 - DictionaryFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>322 - VerificationFailure</para>
		<para>328 - INIFailure</para>
		<para>332 - NoValidParameters</para>
		<para>334 - VideoNotPresent</para>
		<para>338 - EventNotExistsFailure</para>
		<para>347 - SelectEventFailure</para>
		<para>348 - StopRecordEventFailure</para>
		<para>349 - ReturnToLiveFailure</para>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.StopRecordingFromBanner">
	<summary>
   Stop Recording From Action Bar
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.ReturnToLiveViewing.#ctor(System.Boolean,IEX.ElementaryActions.Functionality.Manager)">
	<param name="CheckForVideo">Optional Parameter Default = False. If True Checks For Video After Returnning To Live Viewing</param>
	<param name="pManager">Manager</param>
	<remarks>
 Possible Error Codes:
 <para>301 - DictionaryFailure</para>
		<para>334 - VideoNotPresent</para>
		<para>349 - ReturnToLiveFailure</para>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.ReturnToLiveViewing">
	<summary>
   Return To Live Viewing By Pressing MENU And Then SELECT
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.StillAlive.#ctor(IEX.ElementaryActions.Functionality.Manager)">
	<param name="pManager">Manager</param>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.StillAlive">
	<summary>
  Checkes If STB Is Stuck Or Crashed 
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.SetReminderNotifications.#ctor(System.Boolean,IEX.ElementaryActions.Functionality.Manager)">
	<param name="SetRemindersOn">If True Sets To ON Else To OFF</param>
	<param name="pManager">Manager</param>
	<remarks>
 Possible Error Codes:
 <para>301 - DictionaryFailure</para>
		<para>314 - SetSettingsFailure</para>
		<para>334 - VideoNotPresent</para>
		<para>349 - ReturnToLiveFailure</para>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.SetReminderNotifications">
	<summary>
  Sets Reminder Notification
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.VerifyEventDuration.#ctor(System.String,System.Int32,System.Boolean,IEX.ElementaryActions.Functionality.Manager)">
	<param name="EventKeyName">The Key Of The Event</param>
	<param name="DurationInSec">Duration In Seconds To Check</param>
	<param name="IsDurationLarger">If True Larger Else Smaller</param>
	<param name="pManager">Manager</param>
	<remarks>
 Possible Error Codes:
 <para>305 - PCATFailure</para>
		<para>307 - GetStreamInfoFailure</para>
		<para>322 - VerificationFailure</para>
		<para>328 - INIFailure</para>
		<para>330 - TelnetFailure</para>
		<para>331 - CopyFileFailure</para>
		<para>332 - NoValidParameters</para>
		<para>338 - EventNotExistsFailure</para>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.VerifyEventDuration">
	<summary>
   Verify Event Duration Is Greater Or Smaller From Given Duration
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.CopyPCAT.#ctor(IEX.ElementaryActions.Functionality.Manager)">
	<param name="pManager">Manager</param>
	<remarks>
 Possible Error Codes:
 <para>328 - INIFailure</para>
		<para>330 - TelnetFailure</para>
		<para>331 - CopyFileFailure</para>
		<para>332 - NoValidParameters</para>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.CopyPCAT">
	<summary>
   Copies PCAT.DB From STB By FTP
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.DeleteRecordFromArchive.#ctor(System.String,System.Boolean,System.Boolean,System.Boolean,IEX.ElementaryActions.Functionality.Manager)">
	<param name="EventKeyName">Key Of The Event</param>
	<param name="InReviewBuffer">Optional Parameter Default = True : True If The Event Is In The Persistent Review Buffer</param>
	<param name="Navigate">Optional Parameter Default = True : If True Navigates To Archive</param>
	<param name="VerifyDeletedInPCAT">Optional Parameter Default = True : If True Verifies Event Deleted In PCAT</param>
	<param name="pManager">Manager</param>
	<remarks>
 Possible Error Codes:
 <para>300 - NavigationFailure</para>
		<para>301 - DictionaryFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>305 - PCATFailure</para>
		<para>306 - GetEventInfoFailure</para>
		<para>328 - INIFailure</para>
		<para>321 - VerifyChannelAttributeFailure</para>
		<para>330 - TelnetFailure</para>
		<para>331 - CopyFileFailure</para>
		<para>332 - NoValidParameters</para>
		<para>338 - EventNotExistsFailure</para>
		<para>345 - DeleteEventFailure</para>
		<para>346 - FindEventFailure</para>
		<para>347 - SelectEventFailure</para>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.DeleteRecordFromArchive">
	<summary>
   Deletes Event From Archive
 </summary>
	<remarks></remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.MEM.MountTelnetStbBlind">
	<summary>
   Mount The STB Through Telnet Blindly Without Verification of the IEX For Release Build
 </summary>
	<returns>IEXGateway._IEXResult</returns>
	<remarks></remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.MEM.CopyCsvFiles">
	<summary>
   Copies All Csv Files On \NDS To Log Folder
 </summary>
	<returns>IEXGateway.IEXResult</returns>
	<remarks></remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.PCAT.FindEvent(System.String@,System.String,IEX.ElementaryActions.Functionality.EnumPCATtables,System.Boolean)">
	<summary>
   Finds Event In PCAT.DB And Returnes The Index In The Excel
 </summary>
	<param name="PcatEvId">byRef The Returned PCAT ID Of The Event</param>
	<param name="EventKeyName">Key Of The Event</param>
	<param name="Table">In Which Table To Look In</param>
	<param name="CopyPCAT">If True Copies The PCAT From STB</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>305 - PCATFailure</para>
		<para>330 - TelnetFailure</para>
		<para>331 - CopyFileFailure</para>
		<para>332 - NoValidParameters</para>
		<para>328 - INIFailure</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.PCAT.GetEventDuration(System.String,IEX.ElementaryActions.Functionality.EnumPCATtables,System.String@)">
	<summary>
   Get Event Duration From PCAT 
 </summary>
	<param name="EventKeyName">Key Of The Event</param>
	<param name="Table">The Table To Look In</param>
	<param name="Duration">ByRef The Returned Duration</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>305 - PCATFailure</para>
		<para>328 - INIFailure</para>
		<para>330 - TelnetFailure</para>
		<para>331 - CopyFileFailure</para>
		<para>332 - NoValidParameters</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.PCAT.VerifyEventStatus(System.String,IEX.ElementaryActions.Functionality.EnumPCATtables,System.String,System.String,System.Boolean)">
	<summary>
   Internal Function For Verifying Parameter Status In PCAT
 </summary>
	<param name="EventKeyName">Key Of The Event</param>
	<param name="Table">Recordings Or Bookings</param>
	<param name="Field">Field Of Status In PCAT Modifier</param>
	<param name="ExpectedStatus">Expected String In Column</param>
	<param name="CopyPCAT">If True Copies The PCAT From STB</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>305 - PCATFailure</para>
		<para>328 - INIFailure</para>
		<para>330 - TelnetFailure</para>
		<para>331 - CopyFileFailure</para>
		<para>332 - NoValidParameters</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.PCAT.VerifyEventPartialStatus(System.String,System.String)">
	<summary>
   Verify Event Partial Recording Staus
 </summary>
	<param name="EventKeyName">Key Of The Event</param>
	<param name="Expected">ALL,PARTIAL Or NONE</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>305 - PCATFailure</para>
		<para>328 - INIFailure</para>
		<para>330 - TelnetFailure</para>
		<para>331 - CopyFileFailure</para>
		<para>332 - NoValidParameters</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.PCAT.VerifyEventExceptionReason(System.String,System.String)">
	<summary>
   Verify Event Exception Reason
 </summary>
	<param name="EventKeyName">Key Of The Event</param>
	<param name="ExceptionReason">
		<para>VIEWER_STOPPED</para>
		<para>VIEWER_RESTARTED_AFTER_RECORDING_STOPPED</para>
		<para>VIEWER_BOOKED_TOO_LATE</para>
		<para>VIEWER_STOPPED_TUNER_IMMEDIATE_CONFLICT</para>
		<para>VIEWER_STOPPED_TUNER_BOOKING_CONFLICT</para>
		<para>VIEWER_STOPPED_DISK_CONFLICT</para>
		<para>VIEWER_BOOKING_DELETED</para>
		<para>POWER_FAILURE</para>
		<para>INSUFFICIENT_DISK_SPACE</para>
		<para>NO_EVENT_IN_SCHEDULE</para>
		<para>NO_CARD_DETECTED</para>
		<para>NO_TUNER_AVAILABLE</para>
		<para>NO_CA_AUTHORISATION</para>
		<para>RECORDED_CONTENT_MISSING</para>
		<para>SIGNAL_LOSS</para>
		<para>PMT_NOT_AVAILABLE</para>
		<para>ES_NOT_AVAILABLE</para>
		<para>RASP_OVERFLOW</para>
		<para>MAX_FILE_SIZE_EXCEEDED</para>
		<para>RECORDING_SUCCEEDED</para>
		<para>BOOKING_EXPIRED</para>
		<para>HEALTH_CHECK</para>
		<para>SWDOWNLOAD</para>
		<para>CONNECTION_LOST</para>
		<para>HTTP Error</para>
		<para>RESTARTED_AFTER_RECORDING_STOPPED</para>
		<para>PASSIVE_STANDBY</para>
		<para>NO_EXCEPTION</para>
		<para>Unknown exception (100)</para>
	</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>305 - PCATFailure</para>
		<para>328 - INIFailure</para>
		<para>330 - TelnetFailure</para>
		<para>331 - CopyFileFailure</para>
		<para>332 - NoValidParameters</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.PCAT.VerifyEventDeleted(System.String,IEX.ElementaryActions.Functionality.EnumPCATtables)">
	<summary>
   Verify Event Is Deleted From PCAT
 </summary>
	<param name="EventKeyName">Key Of The Event</param>
	<param name="Table">In Which Table To Look In</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>305 - PCATFailure</para>
		<para>328 - INIFailure</para>
		<para>330 - TelnetFailure</para>
		<para>331 - CopyFileFailure</para>
		<para>332 - NoValidParameters</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.PCAT.VerifyEventIsRecording(System.String)">
	<summary>
   Verify Event Is Recording In PCAT
 </summary>
	<param name="EventKeyName">Key Of The Event</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>305 - PCATFailure</para>
		<para>328 - INIFailure</para>
		<para>330 - TelnetFailure</para>
		<para>331 - CopyFileFailure</para>
		<para>332 - NoValidParameters</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.PCAT.VerifyEventBooked(System.String)">
	<summary>
   Verify Event Is Booked From PCAT
 </summary>
	<param name="EventKeyName">Key Of The Event</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>305 - PCATFailure</para>
		<para>328 - INIFailure</para>
		<para>330 - TelnetFailure</para>
		<para>331 - CopyFileFailure</para>
		<para>332 - NoValidParameters</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.PCAT.VerifyKeep(System.String,System.Boolean)">
	<summary>
  Verify Event Keep Status In PCAT
 </summary>
	<param name="EventKeyName">Key Of The Event</param>
	<param name="Keep">If True Search Status TRUE Else Search FALSE</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>305 - PCATFailure</para>
		<para>328 - INIFailure</para>
		<para>330 - TelnetFailure</para>
		<para>331 - CopyFileFailure</para>
		<para>332 - NoValidParameters</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.PCAT.GetEventInfo(System.String,IEX.ElementaryActions.Functionality.EnumPCATtables,System.String,System.String@)">
	<summary>
   Gets Event Information From PCAT By Field Name In The PCAT Table
 </summary>
	<param name="EventKeyName">The Key Of The Event</param>
	<param name="Table">In Which Table To Look In</param>
	<param name="FieldName">The Field Name In The Table</param>
	<param name="ReturnedValue">ByRef The Returned Value</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks></remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.PCAT.CopyPCAT">
	<summary>
   Copies PCAT.DB From STB By FTP
 </summary>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>328 - INIFailure</para>
		<para>330 - TelnetFailure</para>
		<para>331 - CopyFileFailure</para>
		<para>332 - NoValidParameters</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.RemoveFavouritesFromBanner.#ctor(IEX.ElementaryActions.Functionality.Manager)">
	<param name="pManager">Manager</param>
	<remarks>
 Possible Error Codes:
 <para>301 - DictionaryFailure</para>
		<para>322 - VerificationFailure</para>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.RemoveFavouritesFromBanner">
	<summary>
   Adds to Favourites From Action Bar 
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.TuneToChannel.#ctor(System.String,System.Boolean,IEX.ElementaryActions.Functionality.Manager)">
	<param name="ChannelNumber">The Channel Number</param>
	<param name="ReturnToLive">If True Returnes To Live Before Tunning Else Not (For Tunning From Locked Channel)</param>
	<param name="pManager">Manager</param>
	<remarks>
 Possible Error Codes:
 <para>301 - DictionaryFailure</para>
		<para>322 - VerificationFailure</para>
		<para>328 - INIFailure</para>
		<para>334 - VideoNotPresent</para>
		<para>349 - ReturnToLiveFailure</para>
		<para>351 - SurfingFailure</para>
		<para>355 - TuneToChannelFailure</para>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.TuneToChannel">
	<summary>
   Tune To Channel
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.MountTelnetStbBlind.#ctor(IEX.ElementaryActions.Functionality.Manager)">
	<param name="pManager">Manager</param>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.MountTelnetStbBlind">
	<summary>
   Mount The STB Through Telnet Blindly Without Verification of the IEX For Release Build
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.SetUnsetFavoriteChannelNumList.#ctor(System.String,IEX.ElementaryActions.Functionality.EnumFavouriteIn,System.Boolean,IEX.ElementaryActions.Functionality.Manager)">
	<param name="ChannelNumList">Requested Channel Number(s) - If Several Channel Numbers Then Use Comma As Separator</param>
	<param name="SetAsFavorite">True to Set favorite(s), False to Unset favorite(s)</param>
	<param name="pManager">Manager</param>
	<remarks>
 Possible Error Codes:
 <para>300 - NavigationFailure</para>
		<para>302 - EmptyEpgInfoFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>314 - SetSettingsFailure</para>
		<para>332 - NoValidParameters</para>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.SetUnsetFavoriteChannelNumList">
	<summary>
   Setting/Unsetting 1 Or More Channel(s) As/From Favorite
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.CancelBookingFromGuide.#ctor(System.String,System.Boolean,System.Boolean,System.Boolean,IEX.ElementaryActions.Functionality.Manager)">
	<param name="EventKeyName">Key Of The Event</param>
	<param name="VerifyCanceledInPCAT">Optional Parameter Default = True : If True Verifies Event Canceled In PCAT</param>
	<param name="ReturnToLive">Optional Parameter Default = True : If True Returns To Live Viewing</param>
	<param name="pManager">Manager</param>
	<remarks>
 Possible Error Codes:
 <para>300 - NavigationFailure</para>
		<para>301 - DictionaryFailure</para>
		<para>302 - EmptyEpgInfoFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>305 - PCATFailure</para>
		<para>306 - GetEventInfoFailure</para>
		<para>322 - VerificationFailure</para>
		<para>328 - INIFailure</para>
		<para>330 - TelnetFailure</para>
		<para>331 - CopyFileFailure</para>
		<para>332 - NoValidParameters</para>
		<para>334 - VideoNotPresent</para>
		<para>338 - EventNotExistsFailure</para>
		<para>342 - CancelEventFailure</para>
		<para>346 - FindEventFailure</para>
		<para>347 - SelectEventFailure</para>
		<para>349 - ReturnToLiveFailure</para>
		<para>355 - TuneToChannelFailure</para>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.CancelBookingFromGuide">
	<summary>
    Canceling Booking From Guide
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.FindEvent.#ctor(System.String,IEX.ElementaryActions.Functionality.EnumPCATtables,System.Boolean,IEX.ElementaryActions.Functionality.Manager)">
	<param name="EventKeyName">Key Of The Event</param>
	<param name="Table">In Which Table To Look In</param>
	<param name="CopyPCAT">If True Copies The PCAT From STB</param>
	<param name="pManager">Manager</param>
	<remarks>
 Possible Error Codes:
 <para>305 - PCATFailure</para>
		<para>330 - TelnetFailure</para>
		<para>331 - CopyFileFailure</para>
		<para>332 - NoValidParameters</para>
		<para>328 - INIFailure</para>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.FindEvent">
	<summary>
   Finds Event In PCAT.DB And Returnes The Index In The Excel
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.VerifyEventIsRecording.#ctor(System.String,IEX.ElementaryActions.Functionality.Manager)">
	<param name="EventKeyName">Key Of The Event</param>
	<param name="pManager">Manager</param>
	<remarks>
 Possible Error Codes:
 <para>305 - PCATFailure</para>
		<para>328 - INIFailure</para>
		<para>330 - TelnetFailure</para>
		<para>331 - CopyFileFailure</para>
		<para>332 - NoValidParameters</para>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.VerifyEventIsRecording">
	<summary>
   Verify Event Is Recording In PCAT
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.LockEventFromArchive.#ctor(System.String,System.Boolean,IEX.ElementaryActions.Functionality.Manager)">
	<param name="EventKeyName">Key Of The Event</param>
	<param name="ReturnToLive">Optional Parameter Default = True : If True Returns To Live Viewing</param>
	<param name="pManager">Manager</param>
	<remarks>
 Possible Error Codes:
 <para>300 - NavigationFailure</para>
		<para>301 - DictionaryFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>306 - GetEventInfoFailure</para>
		<para>328 - INIFailure</para>
		<para>321 - VerifyChannelAttributeFailure</para>
		<para>332 - NoValidParameters</para>
		<para>334 - VideoNotPresent</para>
		<para>338 - EventNotExistsFailure</para>
		<para>346 - FindEventFailure</para>
		<para>347 - SelectEventFailure</para>
		<para>349 - ReturnToLiveFailure</para>
		<para>359 - LockUnlockFailure</para>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.LockEventFromArchive">
	<summary>
   Lock Event From Archive
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.GetCurrentEventTimeFromStart.#ctor(System.Boolean,IEX.ElementaryActions.Functionality.Manager)">
	<param name="PayPerView"></param>
	<param name="pManager">Manager</param>
	<remarks>
 Possible Error Codes:
 <para>337 - ParseEventTimeFailure</para>
		<para>350 - ParsingFailure</para>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.GetCurrentEventTimeFromStart">
	<summary>
   Get Current Event Time From Start In Seconds
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.GetCurrentEventLeftTime.#ctor(System.Boolean,IEX.ElementaryActions.Functionality.Manager)">
	<param name="IsPayPerView">True Only For Pay Per View Event, False Otherwise</param>
	<param name="pManager">Manager</param>
	<remarks>
 Possible Error Codes:
 <para>337 - ParseEventTimeFailure</para>
		<para>350 - ParsingFailure</para>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.GetCurrentEventLeftTime">
	<summary>
   Get Current Event Left Time In Seconds To End Time Of The Event
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.RentFuturePPVEventFromGuide.#ctor(System.String,System.Int32,IEX.ElementaryActions.Functionality.Manager)">
	<param name="ChannelNumber">Channel Of The Event To Be Rented</param>
	<param name="NumberOfPresses">Optional Parameter Default = 1 : Number Of Right Presses From Current Event</param>
	<remarks>
 Possible Error Codes:
 <para>300 - NavigationFailure</para>
		<para>302 - EmptyEpgInfoFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>328 - INIFailure</para>
		<para>347 - SelectEventFailure</para>
		<para>355 - TuneToChannelFailure</para>
		<para>369 - RentPPVEventFailure</para>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.RentFuturePPVEventFromGuide">
	<summary>
   Renting Future PPV Event From Guide
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.CopyCsvFiles.#ctor(IEX.ElementaryActions.Functionality.Manager)">
	<param name="pManager">Manager</param>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.CopyCsvFiles">
	<summary>
   Copies All Csv Files On \NDS To Log Folder
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.SetLockChannel.#ctor(System.String,System.Int32,IEX.ElementaryActions.Functionality.Manager)">
	<param name="ChannelName">Requested Channel Name</param>
	<param name="ChannelNumber">Requested Channel Number</param>
	<param name="pManager">Manager</param>
	<remarks>
 Possible Error Codes:
 <para>300 - NavigationFailure</para>
		<para>301 - DictionaryFailure</para>
		<para>302 - EmptyEpgInfoFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>322 - VerificationFailure</para>
		<para>328 - INIFailure</para>
		<para>357 - LockUnlockChannelFailure</para>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.SetLockChannel">
	<summary>
   Locking Channel From Parental Control
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.SetUnlockChannel.#ctor(System.String,System.Int32,System.Boolean,IEX.ElementaryActions.Functionality.Manager)">
	<param name="ChannelName">Requested Channel Name</param>
	<param name="ChannelNumber">Requested Channel Number</param>
	<param name="pManager">Manager</param>
	<remarks>
 Possible Error Codes:
 <para>300 - NavigationFailure</para>
		<para>301 - DictionaryFailure</para>
		<para>302 - EmptyEpgInfoFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>314 - SetSettingsFailure</para>
		<para>328 - INIFailure</para>
		<para>357 - LockUnlockChannelFailure</para>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.SetUnlockChannel">
	<summary>
   UnLocking Channel From Parental Control
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.FailStep.#ctor(IEX.ElementaryActions.Functionality.Manager)">
	<param name="pManager">Manager</param>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.FailStep">
	<summary>
   Replace The FailStep Function Of The Userlib
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.SyncStream.#ctor(System.String,System.String,System.Int32,System.Int32,System.String,IEX.ElementaryActions.Functionality.Manager)">
	<param name="StreamStartTime">The Stream Start Time</param>
	<param name="StreamEndTime">The Stream End Time</param>
	<param name="MinutesFromStreamEndToReboot">Minutes Before Stream End Time To Perform Power Cycle</param>
	<param name="TestDurationInMin">Optional Parameter Default = -1 : On Default TestStartTime Is Checked Else The Test Duration In Minutes Is Checked</param>
	<param name="TestStartTime">Optional Parameter Default = "" : The Test Requested Start Time</param>
	<param name="pManager">Manager</param>
	<remarks>
 Possible Error Codes:
 <para>301 - DictionaryFailure</para>
		<para>309 - GetEpgTimeFailure</para>
		<para>324 - MountFailure</para>
		<para>327 - SyncFailure</para>
		<para>328 - INIFailure</para>
		<para>332 - NoValidParameters</para>
		<para>349 - ReturnToLiveFailure</para>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.SyncStream">
	<summary>
    Sync The Stream By Given Time
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.VerifyEventPartialStatus.#ctor(System.String,System.String,IEX.ElementaryActions.Functionality.Manager)">
	<param name="EventKeyName">Key Of The Event</param>
	<param name="Expected">ALL,PARTIAL Or NONE</param>
	<param name="pManager">Manager</param>
	<remarks>
 Possible Error Codes:
 <para>305 - PCATFailure</para>
		<para>328 - INIFailure</para>
		<para>330 - TelnetFailure</para>
		<para>331 - CopyFileFailure</para>
		<para>332 - NoValidParameters</para>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.VerifyEventPartialStatus">
	<summary>
   Verify Event Partial Recording Staus
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.SubtitlesLanguageChange.#ctor(IEX.ElementaryActions.Functionality.EnumLanguage,IEX.ElementaryActions.Functionality.Manager,IEX.ElementaryActions.Functionality.EnumSubtitleType)">
	<param name="Language">Language To Set To By Enum Language</param>
	<param name="pManager">Manager</param>
	<remarks>
 Possible Error Codes:
 <para>300 - NavigationFailure</para>
		<para>301 - DictionaryFailure</para>
		<para>302 - EmptyEpgInfoFailure</para>
		<para>319 - SetSubtitlesLanguageFailure</para>
		<para>332 - NoValidParameters</para>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.SubtitlesLanguageChange">
	<summary>
   Sets Subtitles Language From Action Bar
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.LockEventFromPlanner.#ctor(System.String,System.Boolean,IEX.ElementaryActions.Functionality.Manager)">
	<param name="EventKeyName">Key Of The Event</param>
	<param name="ReturnToLive">Optional Parameter Default = True : If True Returns To Live Viewing</param>
	<param name="pManager">Manager</param>
	<remarks>
 Possible Error Codes:
 <para>300 - NavigationFailure</para>
		<para>301 - DictionaryFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>306 - GetEventInfoFailure</para>
		<para>321 - VerifyChannelAttributeFailure</para>
		<para>328 - INIFailure</para>
		<para>332 - NoValidParameters</para>
		<para>334 - VideoNotPresent</para>
		<para>338 - EventNotExistsFailure</para>
		<para>346 - FindEventFailure</para>
		<para>347 - SelectEventFailure</para>
		<para>349 - ReturnToLiveFailure</para>
		<para>359 - LockUnlockFailure</para>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.LockEventFromPlanner">
	<summary>
   Lock Event From Planner
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.StandBy.#ctor(System.Boolean,IEX.ElementaryActions.Functionality.Manager)">
	<param name="IsOn">If True Exiting Standby Else Entering</param>
	<param name="pManager">Manager</param>
	<remarks>
 Possible Error Codes:
 <para>328 - INIFailure</para>
		<para>358 - StandByFailure</para>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.StandBy">
	<summary>
   Entering Or Existing Standby
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.SetSkipInterval.#ctor(IEX.ElementaryActions.Functionality.EnumVideoSkip,System.Boolean,IEX.ElementaryActions.Functionality.Manager)">
	<param name="SkipIntervalInSec">Optional Parameter Default = BOOKMARKMODE : Skip Interval Can Be : BOOKMARKMODE,10,30,60,300,600</param>
	<param name="IsForward">If True Set Skip Forward Else Skip Backwards Interval</param>
	<param name="pManager">Manager</param>
	<remarks>
 Possible Error Codes:
 <para>301 - DictionaryFailure</para>
		<para>302 - EmptyEpgInfoFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>314 - SetSettingsFailure</para>
		<para>334 - VideoNotPresent</para>
		<para>349 - ReturnToLiveFailure</para>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.SetSkipInterval">
	<summary>
   Sets Skip Interval On Stb Settings
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.CancelBookingFromPlanner.#ctor(System.String,System.Int32,System.Boolean,System.Boolean,System.Boolean,IEX.ElementaryActions.Functionality.Manager)">
	<param name="EventKeyName">Key Of The Event</param>
	<param name="OccurrenceNumber">The Occurrence To Cancel From 1 To 14</param>
	<param name="VerifyCancelInPCAT">Optional Parameter Default = True : If True Verifies Event Cancelled In PCAT</param>
	<param name="pManager">Manager</param>
	<remarks>
 Possible Error Codes:
 <para>305 - PCATFailure</para>
		<para>306 - GetEventInfoFailure</para>
		<para>321 - VerifyChannelAttributeFailure</para>
		<para>328 - INIFailure</para>
		<para>330 - TelnetFailure</para>
		<para>332 - NoValidParameters</para>
		<para>331 - CopyFileFailure</para>
		<para>338 - EventNotExistsFailure</para>
		<para>342 - CancelEventFailure</para>
		<para>345 - DeleteEventFailure</para>
		<para>346 - FindEventFailure</para>
		<para>347 - SelectEventFailure</para>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.CancelBookingFromPlanner">
	<summary>
   Cancel Booking From Planner Screen
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.StopRecordingFromArchive.#ctor(System.String,System.Boolean,IEX.ElementaryActions.Functionality.Manager)">
	<param name="EventKeyName">Key Of The Event</param>
	<param name="Navigate">Optional Parameter Default = True : If True Navigates To Archive</param>
	<param name="pManager">Manager</param>
	<remarks>
 Possible Error Codes:
 <para>300 - NavigationFailure</para>
		<para>301 - DictionaryFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>306 - GetEventInfoFailure</para>
		<para>328 - INIFailure</para>
		<para>321 - VerifyChannelAttributeFailure</para>
		<para>332 - NoValidParameters</para>
		<para>338 - EventNotExistsFailure</para>
		<para>346 - FindEventFailure</para>
		<para>347 - SelectEventFailure</para>
		<para>348 - StopRecordEventFailure</para>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.StopRecordingFromArchive">
	<summary>
   Stops Recording Event From Archive
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.ReturnToPlaybackViewing.#ctor(System.Boolean,IEX.ElementaryActions.Functionality.Manager)">
	<param name="CheckForVideo">Optional Parameter Default = False. If True Checks For Video After Returnning To Playback Viewing</param>
	<param name="pManager">Manager</param>
	<remarks>
 Possible Error Codes:
 <para>334 - VideoNotPresent</para>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.ReturnToPlaybackViewing">
	<summary>
   Return To Playback Viewing
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.ChangeAudioTrack.#ctor(IEX.ElementaryActions.Functionality.EnumLanguage,IEX.ElementaryActions.Functionality.EnumAudioType,System.Boolean,IEX.ElementaryActions.Functionality.Manager)">
	<param name="Language">Requested Language</param>
	<param name="Type">Requested Type - STEREO Or DOLBY DIGITAL</param>
	<param name="VerifyAudio">Optional Parameter Default = False,If True Verifies Audio</param>
	<param name="pManager">Manager</param>
	<remarks>
 Possible Error Codes:
 <para>301 - DictionaryFailure</para>
		<para>332 - NoValidParameters</para>
		<para>336 - AudioNotPresent</para>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.ChangeAudioTrack">
	<summary>
   Setting Audio Track On Action Bar
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.GetEventDuration.#ctor(System.String,IEX.ElementaryActions.Functionality.EnumPCATtables,IEX.ElementaryActions.Functionality.Manager)">
	<param name="EventKeyName">Key Of The Event</param>
	<param name="Table">The Table To Look In</param>
	<param name="pManager">Manager</param>
	<remarks>
 Possible Error Codes:
 <para>305 - PCATFailure</para>
		<para>328 - INIFailure</para>
		<para>330 - TelnetFailure</para>
		<para>331 - CopyFileFailure</para>
		<para>332 - NoValidParameters</para>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.GetEventDuration">
	<summary>
   Get Event Duration From PCAT
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.VerifyEventStatus.#ctor(System.String,IEX.ElementaryActions.Functionality.EnumPCATtables,System.String,System.String,System.Boolean,IEX.ElementaryActions.Functionality.Manager)">
	<param name="EventKeyName">Key Of The Event</param>
	<param name="Table">Recordings Or Bookings</param>
	<param name="Field">Field Of Status In PCAT Modifier</param>
	<param name="ExpectedStatus">Expected String In Column</param>
	<param name="CopyPCAT">If True Copies The PCAT From STB</param>
	<param name="pManager">Manager</param>
	<remarks>
 Possible Error Codes:
 <para>305 - PCATFailure</para>
		<para>328 - INIFailure</para>
		<para>330 - TelnetFailure</para>
		<para>331 - CopyFileFailure</para>
		<para>332 - NoValidParameters</para>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.VerifyEventStatus">
	<summary>
   Internal Function For Verifying Parameter Status In PCAT
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.CancelBookingFromBanner.#ctor(System.String,System.Boolean,System.Boolean,System.Boolean,IEX.ElementaryActions.Functionality.Manager)">
	<param name="EventKeyName">Key Of The Event</param>
	<param name="VerifyCancelInPCAT">Optional Parameter Default = True : If True Verifies Event Cancelled In PCAT</param>
	<param name="pManager">Manager</param>
	<remarks>
 Possible Error Codes:
 <para>301 - DictionaryFailure</para>
		<para>305 - PCATFailure</para>
		<para>322 - VerificationFailure</para>
		<para>328 - INIFailure</para>
		<para>330 - TelnetFailure</para>
		<para>331 - CopyFileFailure</para>
		<para>332 - NoValidParameters</para>
		<para>334 - VideoNotPresent</para>
		<para>338 - EventNotExistsFailure</para>
		<para>342 - CancelEventFailure</para>
		<para>347 - SelectEventFailure</para>
		<para>349 - ReturnToLiveFailure</para>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.CancelBookingFromBanner">
	<summary>
   Cancel Future Event Booking
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.ChannelSurf.#ctor(IEX.ElementaryActions.Functionality.EnumSurfIn,System.String,System.Boolean,System.Int32,IEX.ElementaryActions.Functionality.EnumPredicted,System.Boolean,System.Boolean,System.String,System.Boolean,IEX.ElementaryActions.Functionality.Manager)">
	<param name="SurfIn">Can Be : Live, Guide Or ChannelBar</param>
	<param name="ChannelNumber">Optional Parameter Default = "" : Channel Number - Not Supported For Current Channel</param>
	<param name="IsNext">Optional Parameter Default = True : If True Surfs To Next Channel Else To Previous</param>
	<param name="NumberOfPresses">Optional Parameter Default = 1 : Number Of Channels To Surf Up OR Down</param>
	<param name="IsPredicted">Optional Parameter Default = Ignore : If The Next Or Previous Channel Is Predicted</param>
	<param name="DoTune">Optional Parameter Default = False : If True Tune To Surfed Channel</param>
	<param name="pManager">Manager</param>
	<remarks>
 Possible Error Codes:
 <para>301 - DictionaryFailure</para>
		<para>349 - ReturnToLiveFailure</para>
		<para>334 - VideoNotPresent</para>
		<para>328 - INIFailure</para>
		<para>351 - SurfingFailure</para>
		<para>355 - TuneToChannelFailure</para>
		<para>328 - INIFailure</para>
		<para>355 - TuneToChannelFailure</para>
		<para>322 - VerificationFailure</para>
		<para>347 - SelectEventFailure</para>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.ChannelSurf">
	<summary>
   Surfs Channel Up Down On Live,Guide,ChannelBar And Channel Lineup And Tune
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.SetTvGuideBackground.#ctor(IEX.ElementaryActions.Functionality.EnumTvGuideBackground,IEX.ElementaryActions.Functionality.Manager)">
	<param name="TvGuideBackground">TvGuideBackground - Solid/Transparent</param>
	<param name="pManager">Manager</param>
	<remarks>
 Possible Error Codes:
 <para>301 - DictionaryFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>334 - VideoNotPresent</para>
		<para>349 - ReturnToLiveFailure</para>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.SetTvGuideBackground">
	<summary>
   Setting The TV Guide Background (Solid/Transparent)
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.CancelAllBookingsFromPlanner.#ctor(IEX.ElementaryActions.Functionality.Manager)">
	<param name="pManager">Manager</param>
	<remarks>
 Possible Error Codes:
 <para>301 - DictionaryFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>306 - GetEventInfoFailure</para>
		<para>328 - INIFailure</para>
		<para>334 - VideoNotPresent</para>
		<para>342 - CancelEventFailure</para>
		<para>347 - SelectEventFailure</para>
		<para>349 - ReturnToLiveFailure</para>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.CancelAllBookingsFromPlanner">
	<summary>
   Deletes All Bookings In Planner
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.StopPlayback.#ctor(System.Boolean,IEX.ElementaryActions.Functionality.Manager)">
	<param name="IsReviewBuffer">Optional Parameter Default = False : If True Stop From Review Buffer Else From Playback</param>
	<param name="pManager">Manager</param>
	<remarks>
 Possible Error Codes:
 <para>304 - IRVerificationFailure</para>
		<para>322 - VerificationFailure</para>
		<para>328 - INIFailure</para>
		<para>343 - StopPlayEventFailure</para>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.StopPlayback">
	<summary>
    Stop Current Playback
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.VerifyEventDeleted.#ctor(System.String,IEX.ElementaryActions.Functionality.EnumPCATtables,IEX.ElementaryActions.Functionality.Manager)">
	<param name="EventKeyName">Key Of The Event</param>
	<param name="Table">In Which Table To Look In</param>
	<param name="pManager">Manager</param>
	<remarks>
 Possible Error Codes:
 <para>305 - PCATFailure</para>
		<para>328 - INIFailure</para>
		<para>330 - TelnetFailure</para>
		<para>331 - CopyFileFailure</para>
		<para>332 - NoValidParameters</para>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.VerifyEventDeleted">
	<summary>
   Verify Event Is Deleted From PCAT
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.UnlockChannelFromBanner.#ctor(IEX.ElementaryActions.Functionality.Manager)">
	<param name="pManager">Manager</param>
	<remarks>
 Possible Error Codes:
 <para>303 - FasVerificationFailure</para>
		<para>328 - INIFailure</para>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.UnlockChannelFromBanner">
	<summary>
   UnLocks Channel From Action Bar
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.VerifySortingInPlanner.#ctor(IEX.ElementaryActions.Functionality.EnumSortBy,IEX.ElementaryActions.Functionality.Manager)">
	<param name="SortBy">Enum Can Be SortBy Time Or A-Z</param>
	<param name="pManager">Manager</param>
	<remarks>
 Possible Error Codes:
 <para>300 - NavigationFailure</para>
		<para>301 - DictionaryFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>306 - GetEventInfoFailure</para>
		<para>328 - INIFailure</para>
		<para>321 - VerifyChannelAttributeFailure</para>
		<para>332 - NoValidParameters</para>
		<para>338 - EventNotExistsFailure</para>
		<para>346 - FindEventFailure</para>
		<para>347 - SelectEventFailure</para>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.VerifySortingInPlanner">
	<summary>
   Verify Sorting On Archive Screen
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.SetSeriesLinkChannels.#ctor(IEX.ElementaryActions.Functionality.EnumChannelSelection,IEX.ElementaryActions.Functionality.Manager)">
	<param name="ChannelSelection">EnumChannelSelection : From_Single_Channel or From_All_Channels</param>
	<param name="pManager">Manager</param>
	<remarks>
 Possible Error Codes:
 <para>301 - DictionaryFailure</para>
		<para>302 - EmptyEpgInfoFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>314 - SetSettingsFailure</para>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.SetSeriesLinkChannels">
	<summary>
   Sets Series Link Channel Configuration
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.WaitUntilEventStarts.#ctor(System.String,System.String,IEX.ElementaryActions.Functionality.Manager)">
	<param name="EventKeyName">Key Of The Event</param>
	<param name="pManager">Manager</param>
	<remarks>
 Possible Error Codes:
 <para>301 - DictionaryFailure</para>
		<para>309 - GetEpgTimeFailure</para>
		<para>332 - NoValidParameters</para>
		<para>334 - VideoNotPresent</para>
		<para>338 - EventNotExistsFailure</para>
		<para>349 - ReturnToLiveFailure</para>
		<para>350 - ParsingFailure</para>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.WaitUntilEventStarts">
	<summary>
   Waits Until Event Start
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.RecordCurrentEventFromBanner.#ctor(System.String,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,IEX.ElementaryActions.Functionality.Manager)">
	<param name="EventKeyName">Key Of The Event</param>
	<param name="MinTimeBeforeEvEnd">Optional Parameter Default = -1 : Minutes Required Until End Of Event</param>
	<param name="IsResuming">Optional Parameter Default = False : If True Checks Resume Recording Milestones</param>
	<param name="VerifyIsRecordingInPCAT">Optional Parameter Default = True : If True Verify Is Recording In PCAT</param>
	<param name="IsConflict">Optional Parameter Default = False : If True Verify Conflict Appeared Before Recording Is Confirmed</param>
	<param name="IsPastEvent">Optional Parameter Default = False : If True Verify STB is in RB on Past Event and Milestones on Past Event Recording.</param>
	<param name="pManager">Manager</param>
	<remarks>
 Possible Error Codes:
 <para>301 - DictionaryFailure</para>
		<para>302 - EmptyEpgInfoFailure</para>
		<para>305 - PCATFailure</para>
		<para>323 - VerifyStateFailure</para>
		<para>328 - INIFailure</para>
		<para>330 - TelnetFailure</para>
		<para>331 - CopyFileFailure</para>
		<para>332 - NoValidParameters</para>
		<para>334 - VideoNotPresent</para>
		<para>337 - ParseEventTimeFailure</para>
		<para>339 - RecordEventFailure</para>
		<para>344 - ConflictFailure</para>
		<para>349 - ReturnToLiveFailure</para>
		<para>350 - ParsingFailure</para>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.RecordCurrentEventFromBanner">
	<summary>
   Recording Current Event From Action Bar
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.VerifyKeep.#ctor(System.String,System.Boolean,IEX.ElementaryActions.Functionality.Manager)">
	<param name="EventKeyName">Key Of The Event</param>
	<param name="Keep">If True Search Status TRUE Else Search FALSE</param>
	<param name="pManager">Manager</param>
	<remarks>
 Possible Error Codes:
 <para>305 - PCATFailure</para>
		<para>328 - INIFailure</para>
		<para>330 - TelnetFailure</para>
		<para>331 - CopyFileFailure</para>
		<para>332 - NoValidParameters</para>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.VerifyKeep">
	<summary>
  Verify Event Keep Status In PCAT
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.TuneToLockedChannel.#ctor(System.String,System.Boolean,IEX.ElementaryActions.Functionality.Manager)">
	<param name="ChannelNumber">Channel Number To Tune To</param>
	<param name="CheckForVideo">Optional Parameter Default = True,If True Then Checks For Video Else Not Checking For Video</param>
	<param name="pManager">Manager</param>
	<remarks>
 Possible Error Codes:
 <para>300 - NavigationFailure</para>
		<para>301 - DictionaryFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>322 - VerificationFailure</para>
		<para>328 - INIFailure</para>
		<para>332 - NoValidParameters</para>
		<para>334 - VideoNotPresent</para>
		<para>349 - ReturnToLiveFailure</para>
		<para>351 - SurfingFailure</para>
		<para>355 - TuneToChannelFailure</para>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.TuneToLockedChannel">
	<summary>
   Tunning To A Locked Channel
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.SurfToChannelInGuide.#ctor(System.String,IEX.ElementaryActions.Functionality.Manager)">
	<param name="ChannelNumber">Channel Number To Tune To</param>
	<param name="pManager">Manager</param>
	<remarks>a
 Possible Error Codes:
 <para>300 - NavigationFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>322 - VerificationFailure</para>
		<para>332 - NoValidParameters</para>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.SurfToChannelInGuide">
	<summary>
   Surfing To A Channel In Guide
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.UnlockEventFromPlanner.#ctor(System.String,System.Boolean,IEX.ElementaryActions.Functionality.Manager)">
	<param name="EventKeyName">Key Of The Event</param>
	<param name="ReturnToLive">Optional Parameter Default = True : If True Returns To Live Viewing</param>
	<param name="pManager">Manager</param>
	<remarks>
 Possible Error Codes:
 <para>300 - NavigationFailure</para>
		<para>301 - DictionaryFailure</para>
		<para>302 - EmptyEpgInfoFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>306 - GetEventInfoFailure</para>
		<para>321 - VerifyChannelAttributeFailure</para>
		<para>328 - INIFailure</para>
		<para>332 - NoValidParameters</para>
		<para>334 - VideoNotPresent</para>
		<para>338 - EventNotExistsFailure</para>
		<para>346 - FindEventFailure</para>
		<para>347 - SelectEventFailure</para>
		<para>349 - ReturnToLiveFailure</para>
		<para>359 - LockUnlockFailure</para>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.UnlockEventFromPlanner">
	<summary>
   UnLock Event From Planner
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.VerifyRecurringBookingInPlanner.#ctor(System.String,IEX.ElementaryActions.Functionality.Manager)">
	<param name="EventKeyName">Key Of The Event</param>
	<param name="pManager">Manager</param>
	<remarks>
 Possible Error Codes:
 <para>300 - NavigationFailure</para>
		<para>301 - DictionaryFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>306 - GetEventInfoFailure</para>
		<para>321 - VerifyChannelAttributeFailure</para>
		<para>328 - INIFailure</para>
		<para>332 - NoValidParameters</para>
		<para>338 - EventNotExistsFailure</para>
		<para>346 - FindEventFailure</para>
		<para>347 - SelectEventFailure</para>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.VerifyRecurringBookingInPlanner">
	<summary>
    Verifying Event Recurring Events On Planner By Name,Date,StartTime And EndTime
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.SetSgtEgt.#ctor(System.Boolean,System.String,IEX.ElementaryActions.Functionality.Manager)">
	<param name="isStartToBeSet">If True Sets SGT Else Sets EGT</param>
	<param name="valueToBeSet">The value in String to be set as Guard Time</param>
	<param name="pManager">Manager</param>
	<remarks>
 Possible Error Codes:
 <para>301 - DictionaryFailure</para>
		<para>302 - EmptyEpgInfoFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>314 - SetSettingsFailure</para>
		<para>322 - VerificationFailure</para>
		<para>332 - NoValidParameters</para>
		<para>334 - VideoNotPresent</para>
		<para>349 - ReturnToLiveFailure</para>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.SetSgtEgt">
	<summary>
   Sets Start/End Guard Time On Stb Settings
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.BrowseGuideFuture.#ctor(System.Boolean,System.Int32,System.Boolean,System.Int32,IEX.ElementaryActions.Functionality.Manager)">
	<param name="MoveRight">If True Moves Right Else Moves Left</param>
	<param name="NumOfRightLeftPresses">Optional Parameter Default = 1 : Number Of Moves Right Or Left</param>
	<param name="MoveChannelUp">Optional Parameter Default = True : If True Moves Up Else Moves Down</param>
	<param name="NumOfUpDownPresses">Optional Parameter Default = 0 : Number Of Moves Up OR Down</param>
	<param name="pManager">Manager</param>
	<remarks>
 Possible Error Codes:
 <para>300 - NavigationFailure</para>
		<para>351 - SurfingFailure</para>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.BrowseGuideFuture">
	<summary>
   Browses In Guide Left Right Or Up Down Directions
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.WaitUntilReminder.#ctor(System.String,IEX.ElementaryActions.Functionality.Manager)">
	<param name="EventKeyName">Key Of The Event</param>
	<param name="pManager">Manager</param>
	<remarks>
 Possible Error Codes:
 <para>301 - DictionaryFailure</para>
		<para>309 - GetEpgTimeFailure</para>
		<para>332 - NoValidParameters</para>
		<para>334 - VideoNotPresent</para>
		<para>338 - EventNotExistsFailure</para>
		<para>349 - ReturnToLiveFailure</para>
		<para>350 - ParsingFailure</para>
		<para>354 - ReminderFailure</para>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.WaitUntilReminder">
	<summary>
  Waits Until Reminder Supposed To Be Shown ( Start Time Of The Event Minus 60 Sec )
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.DUMMY(System.String,System.Boolean)">
	<summary>
    Dummy function to test the EA
 </summary>
	<returns>IEXGateway._IEXResult</returns>
	<remarks></remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.TuneToLockedChannel(System.String,System.Boolean)">
	<summary>
   Tunning To A Locked Channel
 </summary>
	<param name="ChannelNumber">Channel Number To Tune To</param>
	<param name="CheckForVideo">Optional Parameter Default = True,If True Then Checks For Video Else Not Checking For Video</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>300 - NavigationFailure</para>
		<para>301 - DictionaryFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>322 - VerificationFailure</para>
		<para>328 - INIFailure</para>
		<para>332 - NoValidParameters</para>
		<para>334 - VideoNotPresent</para>
		<para>349 - ReturnToLiveFailure</para>
		<para>351 - SurfingFailure</para>
		<para>355 - TuneToChannelFailure</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.SurfToChannelInGuide(System.String)">
	<summary>
    Surfing To A Channel In Guide
 </summary>
	<param name="ChannelNumber">Channel Number To Tune To</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>300 - NavigationFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>322 - VerificationFailure</para>
		<para>332 - NoValidParameters</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.ChangeAudioTrack(IEX.ElementaryActions.Functionality.EnumLanguage,IEX.ElementaryActions.Functionality.EnumAudioType,System.Boolean)">
	<summary>
   Setting Audio Track On Action Bar
 </summary>
	<param name="Language">Requested Language</param>
	<param name="Type">Requested Type - STEREO Or DOLBY DIGITAL</param>
	<param name="VerifyAudio">Optional Parameter Default = False,If True Verifies Audio</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>301 - DictionaryFailure</para>
		<para>332 - NoValidParameters</para>
		<para>336 - AudioNotPresent</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.SubtitlesLanguageChange(IEX.ElementaryActions.Functionality.EnumLanguage,IEX.ElementaryActions.Functionality.EnumSubtitleType)">
	<summary>
   Sets Subtitles Language From Action Bar
 </summary>
	<param name="Language">Language To Set To By Enum Language</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>300 - NavigationFailure</para>
		<para>301 - DictionaryFailure</para>
		<para>302 - EmptyEpgInfoFailure</para>
		<para>319 - SetSubtitlesLanguageFailure</para>
		<para>332 - NoValidParameters</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.EnterPIN(System.String,System.String)">
	<summary>
   Enters The PIN
 </summary>
	<param name="PIN">PIN Requested To Enter</param>
	<param name="NextState">The Next State After Entering PIN</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>300 - NavigationFailure</para>
		<para>301 - DictionaryFailure</para>
		<para>302 - EmptyEpgInfoFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>322 - VerificationFailure</para>
		<para>328 - INIFailure</para>
		<para>332 - NoValidParameters</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.EnterDeafultPIN(System.String)">
	<summary>
   Enters The PIN
 </summary>
	<param name="NextState">The Next State After Entering PIN</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>300 - NavigationFailure</para>
		<para>301 - DictionaryFailure</para>
		<para>302 - EmptyEpgInfoFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>322 - VerificationFailure</para>
		<para>328 - INIFailure</para>
		<para>332 - NoValidParameters</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.HealthCheck(System.String)">
	<summary>
    Do STB Health Check By Checking Tune To Channel,Checking For Video,Navigate And Get Event Name From Guide And Lunching The Action Bar
 </summary>
	<param name="ChannelNumber">Channel Number To Tune To</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks></remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.SyncStream(System.String,System.String,System.Int32,System.Int32,System.String)">
	<summary>
    Sync The Stream By Given Time
 </summary>
	<param name="StreamStartTime">The Stream Start Time</param>
	<param name="StreamEndTime">The Stream End Time</param>
	<param name="MinutesFromStreamEndToReboot">Minutes Before Stream End Time To Perform Power Cycle</param>
	<param name="TestDurationInMin">Optional Parameter Default = -1 : On Default TestStartTime Is Checked Else The Test Duration In Minutes Is Checked</param>
	<param name="TestStartTime">Optional Parameter Default = "" : The Test Requested Start Time</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>301 - DictionaryFailure</para>
		<para>309 - GetEpgTimeFailure</para>
		<para>324 - MountFailure</para>
		<para>327 - SyncFailure</para>
		<para>328 - INIFailure</para>
		<para>332 - NoValidParameters</para>
		<para>349 - ReturnToLiveFailure</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.StandBy(System.Boolean)">
	<summary>
   Entering Or Existing Standby
 </summary>
	<param name="IsOn">If True Exiting Standby Else Entering</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>328 - INIFailure</para>
		<para>358 - StandByFailure</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.PowerCycle(System.Int32,System.Boolean,System.Boolean)">
	<summary>
   Power STB Off And On With Mount
 </summary>
	<param name="SecBeforePowerOn">Seconds Before Powering ON The STB</param>
	<param name="GetOutOfStandBy">Optional Parameter Default = True : If True Gets Out Of Standby</param>
	<param name="FormatSTB">Optional Parameter Default = True : If True Mount The STB With FORMAT Else With NOCLEAN</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>301 - DictionaryFailure</para>
		<para>324 - MountFailure</para>
		<para>328 - INIFailure</para>
		<para>330 - TelnetFailure</para>
		<para>332 - NoValidParameters</para>
		<para>358 - StandByFailure</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.CheckForVideo(System.Boolean,System.Boolean,System.Int32,System.Boolean)">
	<summary>
    Checks If Video Is Present Or Not Present
 </summary>
	<param name="IsPresent">If True Video Present Else No Video Present</param>
	<param name="CheckFullArea">If True Checks As Much As Possible Of The Screen Else Checks Top Left Corner</param>
	<param name="Timeout">Timeout To Check For Video Presence</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>333 - VideoPresent</para>
		<para>334 - VideoNotPresent</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.CheckForVideo(System.String,System.Boolean,System.Int32,System.Boolean)">
	<summary>
   Checks If Video Is Present Or Not Present By Coordinates
 </summary>
	<param name="Coordinates">The CheckForVideo Coordinates</param>
	<param name="IsPresent">If True Video Present Else No Video Present</param>
	<param name="Timeout">Timeout To Check For Video Presence</param>
	<returns></returns>
	<remarks>
 Possible Error Codes:
 <para>333 - VideoPresent</para>
		<para>334 - VideoNotPresent</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.CheckForAudio(System.Boolean,System.Int32)">
	<summary>
   Checks If Audio Is Present Or Not Present
 </summary>
	<param name="IsPresent">If True Audio Present Else No Audio Present</param>
	<param name="Timeout">Timeout To Check For Audio Presence</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>335 - AudioPresent</para>
		<para>336 - AudioNotPresent</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.ChannelSurf(IEX.ElementaryActions.Functionality.EnumSurfIn,System.String,System.Boolean,System.Int32,IEX.ElementaryActions.Functionality.EnumPredicted,System.Boolean,System.Boolean,System.String,System.Boolean)">
	<summary>
   Surfs Channel Up Down On Live,Guide,ChannelBar And Channel Lineup And Tune
 </summary>
	<param name="SurfIn">Can Be : Live, Guide Or ChannelBar</param>
	<param name="ChannelNumber">Optional Parameter Default = "" : Channel Number</param>
	<param name="IsNext">Optional Parameter Default = True : If True Surfs To Next Channel Else To Previous</param>
	<param name="NumberOfPresses">Optional Parameter Default = 1 : Number Of Channels To Surf Up OR Down</param>
	<param name="IsPredicted">Optional Parameter Default = Ignore : If The Next Or Previous Channel Is Predicted</param>
	<param name="DoTune">Optional Parameter Default = False : If True Tune To Surfed Channel</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>301 - DictionaryFailure</para>
		<para>349 - ReturnToLiveFailure</para>
		<para>334 - VideoNotPresent</para>
		<para>328 - INIFailure</para>
		<para>351 - SurfingFailure</para>
		<para>355 - TuneToChannelFailure</para>
		<para>328 - INIFailure</para>
		<para>355 - TuneToChannelFailure</para>
		<para>322 - VerificationFailure</para>
		<para>347 - SelectEventFailure</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.TuneToChannel(IEX.ElementaryActions.Functionality.EnumSurfIn,System.Int32,IEX.ElementaryActions.Functionality.EnumPredicted,System.Boolean)">
	<summary>
   Surfs Channel Up Down On Live,Guide,ChannelBar And Channel Lineup And Tune
 </summary>
	<param name="SurfIn">Can Be : Live, Guide, ChannelBar Or Channel Lineup</param>
	<param name="Offset">If Smaller Than 0 Surfs Down Else Surfs Up</param>
	<param name="IsPredicted">Optional Parameter Default = Ignore : If The Next Or Previous Channel Is Predicted</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>301 - DictionaryFailure</para>
		<para>349 - ReturnToLiveFailure</para>
		<para>334 - VideoNotPresent</para>
		<para>328 - INIFailure</para>
		<para>351 - SurfingFailure</para>
		<para>355 - TuneToChannelFailure</para>
		<para>328 - INIFailure</para>
		<para>355 - TuneToChannelFailure</para>
		<para>322 - VerificationFailure</para>
		<para>347 - SelectEventFailure</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.SurfToChannel(IEX.ElementaryActions.Functionality.EnumSurfIn,System.Int32,System.Boolean)">
	<summary>
    Surfs Channel Up Down On Live,Guide,ChannelBar And Channel Lineup Without Tune 
 </summary>
	<param name="SurfIn">Importent !! Live Is not a Valid param Can Be : Guide, ChannelBar Or Channel Lineup</param>
	<param name="Offset">If Smaller Than 0 Surfs Down Else Surfs Up</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>301 - DictionaryFailure</para>
		<para>349 - ReturnToLiveFailure</para>
		<para>334 - VideoNotPresent</para>
		<para>328 - INIFailure</para>
		<para>351 - SurfingFailure</para>
		<para>355 - TuneToChannelFailure</para>
		<para>328 - INIFailure</para>
		<para>355 - TuneToChannelFailure</para>
		<para>322 - VerificationFailure</para>
		<para>347 - SelectEventFailure</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.TuneToChannel(System.String,System.Boolean)">
	<summary>
   Tune To Channel
 </summary>
	<param name="ChannelNumber">The Channel Number</param>
	<param name="ReturnToLive">If True Returnes To Live Before Tunning Else Not (For Tunning From Locked Channel)</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>301 - DictionaryFailure</para>
		<para>322 - VerificationFailure</para>
		<para>328 - INIFailure</para>
		<para>334 - VideoNotPresent</para>
		<para>349 - ReturnToLiveFailure</para>
		<para>351 - SurfingFailure</para>
		<para>355 - TuneToChannelFailure</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.TuneToRadioChannel(System.String)">
	<summary>
   Tune To Radio Channel
 </summary>
	<param name="ChannelNumber">The Channel Number</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
		<para>301 - DictionaryFailure</para>
		<para>322 - VerificationFailure</para>
		<para>328 - INIFailure</para>
		<para>333 - VideoPresent</para>
		<para>334 - VideoNotPresent</para>
		<para>335 - AudioPresent</para>
		<para>336 - AudioNotPresent</para>
		<para>349 - ReturnToLiveFailure</para>
		<para>351 - SurfingFailure</para>
		<para>355 - TuneToChannelFailure</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.ChannelSurfWithSubtitles(System.String,System.Boolean,System.Int32,IEX.ElementaryActions.Functionality.EnumPredicted)">
	<summary>
   Surfs Channel Up Down Or DCA On Live With Subtitles
 </summary>
	<param name="ChannelNumber">Optional Parameter Default = "" : Channel Number</param>
	<param name="IsNext">Optional Parameter Default = True : If True Surfs To Next Channel Else To Previous</param>
	<param name="NumberOfPresses">Optional Parameter Default = 1 : Number Of Channels To Surf Up OR Down</param>
	<param name="IsPredicted">Optional Parameter Default = True : If The Next Or Previous Channel Is Predicted</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>301 - DictionaryFailure</para>
		<para>322 - VerificationFailure</para>
		<para>328 - INIFailure</para>
		<para>332 - NoValidParameters</para>
		<para>334 - VideoNotPresent</para>
		<para>349 - ReturnToLiveFailure</para>
		<para>351 - SurfingFailure</para>
		<para>355 - TuneToChannelFailure</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.ChannelBarSurfFuture(System.Boolean,System.Int32)">
	<summary>
   Surfs Channel Up Or Down And Then To Next Event In ChannelBar
 </summary>
	<param name="IsNext">If True Surfs To Next Channel Else To Previous</param>
	<param name="NumberOfPressesUpDown">Optional Parameter Default = 1 : Number Of Surfs</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>328 - INIFailure</para>
		<para>347 - SelectEventFailure</para>
		<para>351 - SurfingFailure</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.BrowseGuideFuture(System.Boolean,System.Int32,System.Boolean,System.Int32)">
	<summary>
   Browses In Guide Left Right Or Up Down Directions
 </summary>
	<param name="MoveRight">If True Moves Right Else Moves Left</param>
	<param name="NumOfRightLeftPresses">Optional Parameter Default = 1 : Number Of Moves Right Or Left</param>
	<param name="MoveChannelUp">Optional Parameter Default = True : If True Moves Up Else Moves Down</param>
	<param name="NumOfUpDownPresses">Optional Parameter Default = 0 : Number Of Moves Up OR Down</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>300 - NavigationFailure</para>
		<para>351 - SurfingFailure</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.LaunchActionBar(System.Boolean)">
	<summary>
   Raise The Action Bar
 </summary>
	<param name="FromPlayback">Optional Parameter Default = False, If True Lunching Action Bar From Playback State</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks></remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.AddToFavouritesFromBanner">
	<summary>
   Add Channel To Favorites From Action Bar
 </summary>
	<returns>IEXGateway._IEXResult</returns>
	<remarks></remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.RemoveFavouritesFromBanner">
	<summary>
    Remove Channel To Favorites From Action Bar
 </summary>
	<returns>IEXGateway._IEXResult</returns>
	<remarks></remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.LockChannelFromBanner(System.Boolean)">
	<summary>
   Lock Channel From Action Bar
 </summary>
	<returns>IEXGateway._IEXResult</returns>
	<remarks></remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.UnLockChannelFromBanner">
	<summary>
   UnLock Channel From Action Bar
 </summary>
	<returns>IEXGateway._IEXResult</returns>
	<remarks></remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.UnLockEvent">
	<summary>
   UnLock Event From Channel Bar
 </summary>
	<returns>IEXGateway._IEXResult</returns>
	<remarks></remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.ReturnToLiveViewing(System.Boolean)">
	<summary>
   Return To Live Viewing By Pressing MENU And Then SELECT
 </summary>
	<param name="CheckForVideo">Optional Parameter Default = False. If True Checks For Video After Returnning To Live Viewing</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>301 - DictionaryFailure</para>
		<para>334 - VideoNotPresent</para>
		<para>349 - ReturnToLiveFailure</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.ReturnToPlaybackViewing(System.Boolean)">
	<summary>
   Return To Playback Viewing
 </summary>
	<param name="CheckForVideo">Optional Parameter Default = False. If True Checks For Video After Returnning To Playback Viewing</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>334 - VideoNotPresent</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.VerifyEventDuration(System.String,System.Int32,System.Boolean)">
	<summary>
   Verify Event Duration Is Greater Or Smaller From Given Duration
 </summary>
	<param name="EventKeyName">The Key Of The Event</param>
	<param name="DurationInSec">Duration In Seconds To Check</param>
	<param name="IsDurationLarger">If True Larger Else Smaller</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>305 - PCATFailure</para>
		<para>307 - GetStreamInfoFailure</para>
		<para>322 - VerificationFailure</para>
		<para>328 - INIFailure</para>
		<para>330 - TelnetFailure</para>
		<para>331 - CopyFileFailure</para>
		<para>332 - NoValidParameters</para>
		<para>338 - EventNotExistsFailure</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.VODDataBase(System.String)">
	<summary>
   Performs dynamic navigation applicable only for GET LIVE Environment
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.LayerFocusandPlay">
	<summary>
 Performs Dynamic Layered Asset Play
 Applicable only for GET Live Environment
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.TransactionalVOD(System.Int32)">
	<summary>
 Applicable only for GET Live Environment
 Performs Transactional VOD Asset
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.SearchMCContent(MediaContent,System.Boolean,System.Boolean)">
	<summary>
 Search Content in My Devices
 </summary>
	<param name="Content">The Content To Find</param>
	<param name="Navigate">If True Navigates To MY DEVICES</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>300 - NavigationFailure</para>
		<para>302 - EmptyEpgInfoFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>322 - VerificationFailure</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.PlaybackMCContent(MediaContent,EnumMCPlayMode,System.String)">
	<summary>
 Playback a content from My Devices
 </summary>
	<param name="Content">The Content To play</param>
	<param name="playMode">Optional Parameter Default="", Playmode can be PLAY,SLIDESHOW</param>
	<param name="playbackSetting">Optional Parameter Default="", Slideshow Setting</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>300 - NavigationFailure</para>
		<para>302 - EmptyEpgInfoFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>322 - VerificationFailure</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.ChangeLogFileName(System.String)">
	<summary>
 In case of executing from Iexecuter the this function is taking care that a new folder
 under the name of the test with time stamp will create for the 
 log in the path alocated for the logs in the XML file
 By this every execution of the same test will create a new log file
 and the log will be located in the local machine and not in the tests folder (shared drive in most of the cases)
 </summary>
	<param name="LogFilePath">The Path Of The IEX Log</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>329 - IEXSystemError</para>
		<para>332 - NoValidParameters</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.GetCurrentEventLeftTime(System.Int32@,System.Boolean)">
	<summary>
   Get Current Event Left Time In Seconds To End Time Of The Event
 </summary>
	<param name="TimeLeftInSec">ByRef The Returned Left Time</param>
	<param name="IsPayPerView">True For PPV Event, False Otherwise</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>337 - ParseEventTimeFailure</para>
		<para>350 - ParsingFailure</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.GetCurrentEventTimeFromStart(System.Int32@,System.Boolean)">
	<summary>
   Get Current Event Time From Start In Seconds
 </summary>
	<param name="TimeOverInSec">ByRef The Returned Passed Time</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>337 - ParseEventTimeFailure</para>
		<para>350 - ParsingFailure</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.WaitUntilEventStarts(System.String,System.String)">
	<summary>
   Waits Until Event Start
 </summary>
	<param name="EventKeyName">Key Of The Event</param>
	<param name="StartGuardTime">Optional Parameter. Default=""</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>301 - DictionaryFailure</para>
		<para>309 - GetEpgTimeFailure</para>
		<para>332 - NoValidParameters</para>
		<para>334 - VideoNotPresent</para>
		<para>338 - EventNotExistsFailure</para>
		<para>349 - ReturnToLiveFailure</para>
		<para>350 - ParsingFailure</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.WaitUntilEventEnds(System.String,System.String)">
	<summary>
  Waits Until Event Ends
 </summary>
	<param name="EventKeyName">Key Of The Event</param>
	<param name="EndGuardTime">Optional Parameter. Default=""</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>301 - DictionaryFailure</para>
		<para>309 - GetEpgTimeFailure</para>
		<para>332 - NoValidParameters</para>
		<para>334 - VideoNotPresent</para>
		<para>338 - EventNotExistsFailure</para>
		<para>349 - ReturnToLiveFailure</para>
		<para>350 - ParsingFailure</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.WaitUntilReminder(System.String)">
	<summary>
  Waits Until Reminder Supposed To Be Shown ( Start Time Of The Event Minus 60 Sec )
 </summary>
	<param name="EventKeyName">Key Of The Event</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>301 - DictionaryFailure</para>
		<para>309 - GetEpgTimeFailure</para>
		<para>332 - NoValidParameters</para>
		<para>334 - VideoNotPresent</para>
		<para>338 - EventNotExistsFailure</para>
		<para>349 - ReturnToLiveFailure</para>
		<para>350 - ParsingFailure</para>
		<para>354 - ReminderFailure</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.MountSerialStb(System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
	<summary>
   Mount The STB Through Serial
 </summary>
	<param name="IsGw">Optional Parameter Default = True : If True Mount Gw Else Mount The Client</param>
	<param name="IsFormat">Optional Parameter Default = True : If True Mount Stb With Format</param>
	<param name="DoReboot">Optional Parameter Default = True : If True Reboot The Stb Else Does Not</param>
	<param name="Retries">Optional Parameter Default = 3 : Number Of Retries In Case Mount Failed</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>324 - MountFailure</para>
		<para>329 - IEXSystemError</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.MountTelnetStb(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
	<summary>
   Mount The STB Through Telnet
 </summary>
	<param name="IsGw">Optional Parameter Default = True : If True Mount Gw Else Mount The Client</param>
	<param name="IsFormat">Optional Parameter Default = True : If True Mount Stb With Format</param>
	<param name="DoReboot">Optional Parameter Default = True : If True Reboot The Stb Else Does Not</param>
	<param name="Retries">Optional Parameter Default = 3 : Number Of Retries In Case Mount Failed</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>324 - MountFailure</para>
		<para>329 - IEXSystemError</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.MountClient(IEX.ElementaryActions.Functionality.EnumMountAs,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
	<summary>
   Mount The Client
 </summary>
	<param name="MountAs">Optional Parameter Default = EnumMountAs.FORMAT : If True Mount The Gateway With Format</param>
	<param name="Retries">Optional Parameter Default = 3 : Number Of Retries In Case Mount Failed</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>326 - MountClientFailure</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.MountGw(IEX.ElementaryActions.Functionality.EnumMountAs,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
	<summary>
   Mount The Gateway
 </summary>
	<param name="MountAs">Optional Parameter Default = EnumMountAs.FORMAT : If True Mount The Gateway With Format</param>
	<param name="Retries">Optional Parameter Default = 3 : Number Of Retries In Case Mount Failed</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>325 - MountGwFailure</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.OtaDownload(System.String,System.String,System.String,System.Boolean,System.String,System.Boolean)">
	<summary>
   Verifies the OTA downaload on the box
 </summary>
	<param name="VersionID"> Binary Vesion on the BOX </param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>301 - DictionaryFailure</para>
		<para>302 - EmptyEpgInfoFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>314 - SetSettingsFailure</para>
		<para>370 - FactoryResetFailure</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.GetAndVerifySoftVersion(System.String@,System.String@,System.Boolean,System.String)">
	<summary>
   Check and verify the Epg version after and before the OTA download
 </summary>
	<param name="OldSoftVersion"> EPG version before OTA download on the BOX </param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>301 - DictionaryFailure</para>
		<para>302 - EmptyEpgInfoFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>314 - SetSettingsFailure</para>
		<para>370 - FactoryResetFailure</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.GetRBDepthInSec(System.String,System.Double@)">
	<summary>
 Calculate the current RB depth in mins
 </summary>
	<param name="timeStampMarginLine">RB depth milestone to be parsed</param>
	<param name="rbDepthInMin">The Returned RBdepth in mins </param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>350 - ParsingFailure</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.FlushRB(System.Double)">
	<summary>
 Stanby wakeup the STB with specified duration
 </summary>
	<param name="waitInStby">Time to wait in stby in secs</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>328 - INIFailure</para>
		<para>358 - StandByFailure</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.BookReminderFromBanner(System.String,System.Int32,System.Boolean)">
	<summary>
  Adding Reminder From Action Bar
 </summary>
	<param name="EventKeyName">Key Of The Event</param>
	<param name="MinTimeBeforeEvStart">Optional Parameter Default = 2 : Minimum Time Left For The Event To Start ( EXAMPLE : For Guard Time )</param>
	<param name="VerifyBookingInPCAT">Optional Parameter Default = True : If True Verifies Event Booked In PCAT</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>305 - PCATFailure</para>
		<para>311 - SetEventReminderFailure</para>
		<para>328 - INIFailure</para>
		<para>332 - NoValidParameters</para>
		<para>334 - VideoNotPresent</para>
		<para>337 - ParseEventTimeFailure</para>
		<para>347 - SelectEventFailure</para>
		<para>349 - ReturnToLiveFailure</para>
		<para>350 - ParsingFailure</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.BookReminderFromGuide(System.String,System.String,System.Int32,System.Int32,System.Boolean,System.Boolean)">
	<summary>
   Adding Reminder From Guide
 </summary>
	<param name="EventKeyName">Key Of The Event</param>
	<param name="ChannelNumber">Channel Of The Event To Be Added As Reminder</param>
	<param name="NumberOfPresses">Optional Parameter Default = 1 : Number Of Right Presses From Current Event</param>
	<param name="MinTimeBeforeEvStart">Optional Parameter Default = 2 : Minimum Time Left For The Event To Start ( EXAMPLE : For Guard Time )</param>
	<param name="VerifyBookingInPCAT">Optional Parameter Default = True : If True Verifies Event Booked In PCAT</param>
	<param name="ReturnToLive">Optional Parameter Default = True : If True Returns To Live Viewing</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>305 - PCATFailure</para>
		<para>306 - GetEventInfoFailure</para>
		<para>323 - VerifyStateFailure</para>
		<para>328 - INIFailure</para>
		<para>332 - NoValidParameters</para>
		<para>334 - VideoNotPresent</para>
		<para>339 - RecordEventFailure</para>
		<para>344 - ConflictFailure</para>
		<para>347 - SelectEventFailure</para>
		<para>349 - ReturnToLiveFailure</para>
		<para>350 - ParsingFailure</para>
		<para>355 - TuneToChannelFailure</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.HandleReminder(System.String,IEX.ElementaryActions.Functionality.EnumReminderActions)">
	<summary>
   Handles Reminder
 </summary>
	<param name="EventKeyName">The Key Of The Event</param>
	<param name="Action">Can Be : Accept,Reject,Ignore Or Wait</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>302 - EmptyEpgInfoFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>308 - GetChannelFailure</para>
		<para>322 - VerificationFailure</para>
		<para>332 - NoValidParameters</para>
		<para>338 - EventNotExistsFailure</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.CancelReminderFromGuide(System.String,System.Boolean,System.Boolean)">
	<summary>
    Cancelling Reminder From Guide
 </summary>
	<param name="EventKeyName">Key Of The Event</param>
	<param name="VerifyCanceledInPCAT">Optional Parameter Default = True : If True Verifies Event Canceled In PCAT</param>
	<param name="ReturnToLive">Optional Parameter Default = True : If True Returns To Live Viewing</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>300 - NavigationFailure</para>
		<para>301 - DictionaryFailure</para>
		<para>302 - EmptyEpgInfoFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>305 - PCATFailure</para>
		<para>306 - GetEventInfoFailure</para>
		<para>322 - VerificationFailure</para>
		<para>328 - INIFailure</para>
		<para>330 - TelnetFailure</para>
		<para>331 - CopyFileFailure</para>
		<para>332 - NoValidParameters</para>
		<para>334 - VideoNotPresent</para>
		<para>338 - EventNotExistsFailure</para>
		<para>346 - FindEventFailure</para>
		<para>347 - SelectEventFailure</para>
		<para>349 - ReturnToLiveFailure</para>
		<para>355 - TuneToChannelFailure</para>
		<para>368 - CancelReminderFailure</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.CopyLogTelnet(System.String)">
	<summary>
   Copies TelnetLog.txt From BuildWinPath To Log Folder
 </summary>
	<param name="FileName">Optional Parameter Default = "Diag_TelnetLog.txt" : Filename Of The Log File</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks></remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.CopyLogSerial(System.String)">
	<summary>
   Copies TelnetLog.txt From BuildWinPath To Log Folder
 </summary>
	<param name="FileName">Optional Parameter Default = "Diag_TelnetLog.txt" : Filename Of The Log File</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks></remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.CopyDiagBinaryLog(System.String)">
	<summary>
 Copies Diag Binary Logs from STB to Host
 </summary>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.DeleteTelnetLog">
	<summary>
   Delete TelnetLog.txt From BuildWinPath
 </summary>
	<returns>IEXGateway._IEXResult</returns>
	<remarks></remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.StillAlive">
	<summary>
  Checkes If STB Is Stuck Or Crashed 
 </summary>
	<returns>IEXGateway._IEXResult</returns>
	<remarks></remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.DaySkipInGuide(IEX.ElementaryActions.Functionality.EnumGuideViews,System.Boolean,System.Int32,System.Boolean,System.Boolean)">
	<summary>
  DaySkipin Guide 
 </summary>
	<returns>IEXGateway._IEXResult</returns>
	<remarks></remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.GetValue(System.String)">
	<summary>
   Get Value From Channels.ini 
 </summary>
	<param name="Key">Key Of Value : HD,SD...</param>
	<returns>String With The Channel</returns>
	<remarks></remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.GetTestParams(System.String)">
	<summary>
   Get Value From The Test INI file
 </summary>
	<param name="Key">Key Of Value</param>
	<returns>String With The Value</returns>
	<remarks></remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.GetValueFromINI(IEX.ElementaryActions.Functionality.EnumINIFile,System.String,System.String)">
	<summary>
   Get Value From The INI file
 </summary>
	<param name="INIFile">INI File Name</param>
	<param name="Section">Section Of Value</param>
	<param name="Key">Key Of Value</param>
	<returns>String With The Value</returns>
	<remarks></remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.GetServiceFromContentXML(System.String,System.String)">
	<summary>
 Get service from Stream configuration XML file based on the passed criterion
 </summary>
	<param name="posCrit">Positive criterion passed as string which will be matched with the required service</param>
	<param name="negCrit">Negative criterion passed as string which will be matched with the required service</param>
	<returns>The first matching service object based on the criteria specified,or nothing if the criteria does not match any service</returns>
	<remarks>
 Criteria are to be passed in the following format - "key1=value1;key2=value2" Eg- "eventDuration=5;parentalRating=high"
 Multiple criteria can also be specified in the following format - "key=value1,value2" Eg- "LCN=101,102"
 Also the exceptions thrown will be caught in the script. Developer should ensure handling of no match scenario since nothing will be returned
 </remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.GetServiceFromContentXML(IEX.ElementaryActions.Functionality.Service,IEX.ElementaryActions.Functionality.Service)">
	<summary>
 Get service from Stream configuration XML file based on the passed criterion
 </summary>
	<param name="posCrit">Positive criterion passed as service object which will be matched with the required service</param>
	<param name="negCrit">Negative criterion passed as service object which will be matched with the required service</param>
	<returns>The first matching service object based on the criteria specified,or nothing if the criteria does not match any service</returns>
	<remarks>
 Criteria are to be passed as an object created with attributes specified - service.eventDuration = 10
 Also the exceptions thrown will be caught in the script. Developer should ensure handling of no match scenario since nothing will be returned
 </remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.GetVODAssetFromContentXML(System.String,System.String)">
	<summary>
 Get VOD asset from Stream configuration XML file based on the passed criterion
 </summary>
	<param name="posCrit">Positive criterion passed as string which will be matched with the required VOD asset</param>
	<param name="negCrit">Negative criterion passed as string which will be matched with the required VOD asset</param>
	<returns>The first matching service object based on the criteria specified,or nothing if the criteria does not match any VOD asset</returns>
	<remarks>
 Criteria are to be passed in the following format - "key1=value1;key2=value2" Eg- "Trailer=True;parentalRating=high"
 Multiple criteria can also be specified in the following format - "key=value1,value2" Eg- "Type=TVOD"
 Also the exceptions thrown will be caught in the script. Developer should ensure handling of no match scenario since nothing will be returned
 </remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.GetVODAssetFromContentXML(VODAsset,VODAsset)">
	<summary>
 Get VOD asset from Stream configuration XML file based on the passed criterion
 </summary>
	<param name="posCrit">Positive criterion passed as VOD asset object which will be matched with the required VOD asset</param>
	<param name="negCrit">Negative criterion passed as VOD asset object which will be matched with the required VOD asset</param>
	<returns>The first matching VOD asset object based on the criteria specified,or nothing if the criteria does not match any VOD asset</returns>
	<remarks>
 Criteria are to be passed as an object created with attributes specified - vodAsset.Trailer = True
 Also the exceptions thrown will be caught in the script. Developer should ensure handling of no match scenario since nothing will be returned
 </remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.GetMediaCentreContentFromContentXML(System.String,System.String)">
	<summary>
 Get Media Centre content from Stream configuration XML file based on the passed criterion
 </summary>
	<param name="posCrit">Positive criterion passed as MCContent object which will be matched with the required MCContent</param>
	<param name="negCrit">Negative criterion passed as MCContent object which will be matched with the required MCContent</param>
	<returns>The first matching MCContent object based on the criteria specified,or nothing if the criteria does not match any MCContent</returns>
	<remarks>
 Criteria are to be passed as an object created with attributes specified - content.Type = Pictures
 Also the exceptions thrown will be caught in the script. Developer should ensure handling of no match scenario since nothing will be returned
 </remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.GetContent``1(System.String,System.String)">
	<summary>
   Get Content from Stream configuration XML file based on the passed criterion 
 </summary>
	<typeparam name="T"> The type of the content object to be searched</typeparam>
	<param name="posCrit">Positive criterion as string for matching of required content</param>
	<param name="negCrit">Negative criterion as string for matching of required content</param>
	<returns>The matching Content object</returns>
	<remarks>
 Criteria are to be passed in the following format - "key1=value1;key2=value2" Eg- "eventDuration=5;parentalRating=high"
 Also the exceptions thrown will be caught in the script. Developer should ensure handling of no match scenario since nothing will be returned
 </remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.GetContent``1(``0,``0)">
	<summary>
   Get Content from Stream configuration XML file based on the passed criterion 
 </summary>
	<typeparam name="T"> The type of the content object to be searched</typeparam>
	<param name="posCrit">Positive criterion as string for matching of required content</param>
	<param name="negCrit">Negative criterion as string for matching of required content</param>
	<returns>The matching Content object list</returns>
	<remarks>
 Criteria are to be passed as an object created with attributes specified - content.eventDuration = 10
 Also the exceptions thrown will be caught in the script. Developer should ensure handling of no match scenario since nothing will be returned
 </remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.GetAttributeFromContentXML(System.String,System.String)">
	<summary>
 Get attributes from Content XML
 </summary>
	<param name="tag">The Tag of XML in which attribute is defined</param>
	<param name="attributeKey">The attribute key as String</param>
	<returns>The attribute value</returns>
	<remarks></remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.GetContentXMLFilePath">
	<summary>
 Gets the Content XML File Path
 </summary>
	<returns>The Content XML File Path as String</returns>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.GetContentXmlFileName">
	<summary>
 Get Content XML File name
 </summary>
	<returns>String</returns>
	<remarks></remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.CreateHashTable(System.String)">
	<summary>
 Create a hashtable from the delimited string passed in the following format
 Eg - "key1=value1;key2=value2"
 </summary>
	<param name="dlmtedStr">The string as in the above format</param>
	<returns>Hashtable</returns>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.CreateHashTable(System.Object)">
	<summary>
 Create a hashtable from the object passed. The hashtable will be such that the key will be the field name and value will be the field value
 </summary>
	<param name="obj">The object which is to be converted to hashtable</param>
	<returns>Hashtable with key as the field name and value as the field value</returns>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.FetchObjFromXMLFile``1(System.String,System.Collections.Hashtable,System.Collections.Hashtable)">
	<summary>
 Fetch a required object from XML file which matches the specified criterion
 </summary>
	<typeparam name="T">The class to which the object will be casted to</typeparam>
	<param name="xmlFilePath">The path of the XML file</param>
	<param name="posCritTbl">Positive criterion for match built as a Hashtable</param>
	<param name="negCritTbl">Negative criterion for match built as a Hashtable</param>
	<returns>Returns the objects which matches the Criteria</returns>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.GetEventInfo(System.String,IEX.ElementaryActions.Functionality.EnumEventInfo)">
	<summary>
   Gets Event Info By EnumEventInfo From Events Collection
 </summary>
	<param name="EventKeyName">The Key Of The Event</param>
	<param name="Info">Enum Event Info : The Requested Info</param>
	<returns>String</returns>
	<remarks>
 EnumEventInfo Fields :
 <para>EventName</para>
		<para>EventStartTime</para>
		<para>EventEndTime</para>
		<para>EventChannel</para>
		<para>RightPresses</para>
		<para>EventStatus</para>
		<para>EventDuration</para>
		<para>EventDate</para>
		<para>EventConvertedDate</para>
		<para>EventPlayedDuration</para>
		<para>EventSource</para>
		<para>EventRecurrence</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.GetChannelLogo">
	<summary>
 Fetch channel logo and parse it to get channel logo name
 </summary>
	<returns>The parsed channel logo name</returns>
	<remarks>
 The channel logo log will be in the format /mnt/nds/../../{logoname}.{extn}
 We will fetch the logoname and return it to be used in the script
 </remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.RentCurrentPPVEventFromGuide(System.String)">
	<summary>
   Renting Current PPV Event From Guide
 </summary>
	<param name="ChannelNumber">Channel Of The PPV Event To Be Rented</param>
	<remarks>
 Possible Error Codes:
 <para>302 - EmptyEpgInfoFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>328 - INIFailure</para>
		<para>355 - TuneToChannelFailure</para>
		<para>347 - SelectEventFailure</para>
		<para>369 - RentPPVEventFailure</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.RentFuturePPVEventFromGuide(System.String,System.Int32)">
	<summary>
   Renting Future PPV Event From Guide
 </summary>
	<param name="ChannelNumber">Channel Of The Event To Be Rented</param>
	<param name="NumberOfPresses">Optional Parameter Default = 1 : Number Of Right Presses From Current Event</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>300 - NavigationFailure</para>
		<para>302 - EmptyEpgInfoFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>328 - INIFailure</para>
		<para>347 - SelectEventFailure</para>
		<para>355 - TuneToChannelFailure</para>
		<para>369 - RentPPVEventFailure</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.RentCurrentPPVEventFromBanner">
	<summary>
   Renting Current PPV Event From Banner
 </summary>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>304 - IRVerificationFailure</para>
		<para>328 - INIFailure</para>
		<para>347 - SelectEventFailure</para>
		<para>369 - RentPPVEventFailure</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.RentFuturePPVEventFromBanner">
	<summary>
   Renting Future PPV Event From Banner
 </summary>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>304 - IRVerificationFailure</para>
		<para>328 - INIFailure</para>
		<para>347 - SelectEventFailure</para>
		<para>369 - RentPPVEventFailure</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.NavigateAndHighlight(System.String,System.Collections.Generic.Dictionary{EnumEpgKeys,System.String})">
	<summary>
   Modifications in Action Bar
 </summary>
	<returns>IEXGateway._IEXResult</returns>
	<remarks></remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.GetAudioType(System.Object,System.Int32,IEX.ElementaryActions.Functionality.EnumAudioType@)">
	<summary>
   Get audio type (from Service/VODAsset object)
 </summary>
	<returns>IEXGateway._IEXResult</returns>
	<remarks></remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.GetSubtitleType(System.Object,System.Int32,IEX.ElementaryActions.Functionality.EnumSubtitleType@)">
	<summary>
   Get Subtitle type (from Service/VODAsset object)
 </summary>
	<returns>IEXGateway._IEXResult</returns>
	<remarks></remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.GetAudioLanguage(System.Object,System.Int32,IEX.ElementaryActions.Functionality.EnumLanguage@)">
	<summary>
   Get audio language (from Service/VODAsset object)
 </summary>
	<returns>IEXGateway._IEXResult</returns>
	<remarks></remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.GetSubtitleLanguage(System.Object,System.Int32,IEX.ElementaryActions.Functionality.EnumLanguage@)">
	<summary>
   Get subtitle language (from Service/VODAsset object)
 </summary>
	<returns>IEXGateway._IEXResult</returns>
	<remarks></remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.GetCurrentAudioLanguage(IEX.ElementaryActions.Functionality.EnumLanguage@)">
	<summary>
   Get current audio language (from channel bar)
 </summary>
	<returns>IEXGateway._IEXResult</returns>
	<remarks></remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.GetCurrentSubtitleLanguage(IEX.ElementaryActions.Functionality.EnumLanguage@)">
	<summary>
   Get current subtitle language (from channel bar)
 </summary>
	<returns>IEXGateway._IEXResult</returns>
	<remarks></remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.GetCurrentSubtitleType(IEX.ElementaryActions.Functionality.EnumSubtitleType@)">
	<summary>
   Get current subtitle type (from channel bar)
 </summary>
	<returns>IEXGateway._IEXResult</returns>
	<remarks></remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.FailStep">
	<summary>
   Replace The FailStep Function Of The Userlib
 </summary>
	<returns>IEXGateway._IEXResult</returns>
	<remarks></remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.TearDown">
	<summary>
   Replace The TearDown Function Of The UserLib
 </summary>
	<returns>IEXGateway._IEXResult</returns>
	<remarks></remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.TelnetLogIn(System.Boolean,System.Boolean)">
	<summary>
   Login To Telnet
 </summary>
	<param name="Telnet1">Optional Paramater Default = True, If True Send To Telnet 1 Else Sends To Telnet 2</param>
	<returns>Boolean</returns>
	<remarks>
 Possible Error Codes:
 <para>330 - TelnetFailure</para>
		<para>332 - NoValidParameters</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.Manager.SendCmd(System.String,System.Boolean,System.String[]@,System.String[])">
	<summary>
   Sends Command To Telnet
 </summary>
	<param name="Cmd">The Command To Send</param>
	<param name="Telnet1">Optional Paramater Default = True, If True Send To Telnet 1 Else Sends To Telnet 2</param>
	<param name="validateStrings">Optional Paramater Default = Nothing,Validates the set of strings</param>
	<param name="Actuallines">Optional Paramater Default = Nothing, returns the actual logs for validateStrings param</param>
	<returns>Boolean</returns>
	<remarks>
 Possible Error Codes:
 <para>330 - TelnetFailure</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.LaunchActionBar.#ctor(System.Boolean,IEX.ElementaryActions.Functionality.Manager)">
	<param name="pManager">Manager</param>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.LaunchActionBar">
	<summary>
   Raise The Action Bar
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.VOD.NavigateToVODAsset(VODAsset,System.Boolean)">
	<summary>
   Navigate to a VOD asset and select it
 </summary>
	<returns>IEXGateway._IEXResult</returns>
	<remarks></remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.VOD.PlayAsset(VODAsset,System.Boolean,System.Boolean,System.Boolean)">
	<summary>
   Navigate to a VOD asset and play it
 </summary>
	<returns>IEXGateway._IEXResult</returns>
	<remarks></remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.VOD.PlayTrailer(VODAsset,System.Boolean)">
	<summary>
   Navigate to a VOD asset and play the trailer
 </summary>
	<returns>IEXGateway._IEXResult</returns>
	<remarks></remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.VOD.BuyAsset(VODAsset,System.Boolean,System.Boolean)">
	<summary>
   Navigate to a VOD asset and buy it
 </summary>
	<returns>IEXGateway._IEXResult</returns>
	<remarks></remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.VOD.SelectPurchasedAsset(VODAsset)">
	<summary>
   Select an asset in the list of purchased assets
 </summary>
	<returns>IEXGateway._IEXResult</returns>
	<remarks></remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.VOD.StopAssetPlayback">
	<summary>
   Stop current asset playback
 </summary>
	<returns>IEXGateway._IEXResult</returns>
	<remarks></remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.VOD.VerifyAssetDetails(VODAsset,System.Boolean)">
	<summary>
   Verify asset details (in asset action menu)
 </summary>
	<returns>IEXGateway._IEXResult</returns>
	<remarks></remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.VOD.SubscribeAsset(VODAsset)">
	<summary>
   Subscribe SVOD asset
 </summary>
	<returns>IEXGateway._IEXResult</returns>
	<remarks></remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.RentCurrentPPVEventFromGuide.#ctor(System.String,IEX.ElementaryActions.Functionality.Manager)">
	<param name="ChannelNumber">Channel Of The PPV Event To Be Rented</param>
	<param name="pManager">Manager</param>
	<remarks>
 Possible Error Codes:
 <para>302 - EmptyEpgInfoFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>328 - INIFailure</para>
		<para>355 - TuneToChannelFailure</para>
		<para>347 - SelectEventFailure</para>
		<para>369 - RentPPVEventFailure</para>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.RentCurrentPPVEventFromGuide">
	<summary>
   Renting Current PPV Event From Guide
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.SetKeepFlag.#ctor(System.String,System.Boolean,System.Boolean,IEX.ElementaryActions.Functionality.Manager)">
	<param name="EventKeyName">Key Of The Event</param>
	<param name="SetKeep">If True Then Set To Keep If False Set To Un Keep</param>
	<param name="ReturnToLive">Optional Parameter Default = True : If True Returns To Live Viewing</param>
	<param name="pManager">Manager</param>
	<remarks>
 Possible Error Codes:
 <para>300 - NavigationFailure</para>
		<para>301 - DictionaryFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>305 - PCATFailure</para>
		<para>306 - GetEventInfoFailure</para>
		<para>312 - SetEventKeepFailure</para>
		<para>321 - VerifyChannelAttributeFailure</para>
		<para>328 - INIFailure</para>
		<para>330 - TelnetFailure</para>
		<para>331 - CopyFileFailure</para>
		<para>332 - NoValidParameters</para>
		<para>334 - VideoNotPresent</para>
		<para>338 - EventNotExistsFailure</para>
		<para>346 - FindEventFailure</para>
		<para>347 - SelectEventFailure</para>
		<para>349 - ReturnToLiveFailure</para>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.SetKeepFlag">
	<summary>
  Set Keep Or Un Keep On Planner Or Archive As Requested
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.BookFutureEventFromBanner.#ctor(System.String,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,IEX.ElementaryActions.Functionality.Manager)">
	<param name="EventKeyName">Key Of The Event</param>
	<param name="NumOfPresses">Optional Parameter Default = -1 : Number Of Left Presses From Current</param>
	<param name="MinTimeBeforeEvStart">Optional Parameter Default = 1 : Minimum Time Right For The Event To Start ( EXAMPLE : For Guard Time )</param>
	<param name="VerifyBookingInPCAT">Optional Parameter Default = True : If True Verify Is Booked In PCAT</param>
	<param name="ReturnToLive">Optional Parameter Default = True : If True Return To Live</param>
	<param name="IsConflict">Optional Parameter Default = False : If True Verify Conflict Appeared Before Recording Is Confirmed</param>
	<param name="pManager">Manager</param>
	<remarks>
 Possible Error Codes:
 <para>301 - DictionaryFailure</para>
		<para>302 - EmptyEpgInfoFailure</para>
		<para>305 - PCATFailure</para>
		<para>323 - VerifyStateFailure</para>
		<para>328 - INIFailure</para>
		<para>330 - TelnetFailure</para>
		<para>331 - CopyFileFailure</para>
		<para>332 - NoValidParameters</para>
		<para>334 - VideoNotPresent</para>
		<para>337 - ParseEventTimeFailure</para>
		<para>338 - EventNotExistsFailure</para>
		<para>339 - RecordEventFailure</para>
		<para>344 - ConflictFailure</para>
		<para>347 - SelectEventFailure</para>
		<para>349 - ReturnToLiveFailure</para>
		<para>350 - ParsingFailure </para>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.BookFutureEventFromBanner">
	<summary>
    Booking Future Event From Action Bar 
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.GetEventInfo.#ctor(System.String,IEX.ElementaryActions.Functionality.EnumPCATtables,System.String,IEX.ElementaryActions.Functionality.Manager)">
	<param name="EventKeyName">Key Of The Event</param>
	<param name="Table">The Table To Look In</param>
	<param name="FieldName">The Field To Look In</param>
	<param name="pManager">Manager</param>
	<remarks>
 Possible Error Codes:
 <para>305 - PCATFailure</para>
		<para>328 - INIFailure</para>
		<para>330 - TelnetFailure</para>
		<para>331 - CopyFileFailure</para>
		<para>332 - NoValidParameters</para>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.GetEventInfo">
	<summary>
   Get Event Information By The Field Name
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.VerifyEventExceptionReason.#ctor(System.String,System.String,IEX.ElementaryActions.Functionality.Manager)">
	<param name="EventKeyName">Key Of The Event</param>
	<param name="ExceptionReason">
		<para>VIEWER_STOPPED</para>
		<para>VIEWER_RESTARTED_AFTER_RECORDING_STOPPED</para>
		<para>VIEWER_BOOKED_TOO_LATE</para>
		<para>VIEWER_STOPPED_TUNER_IMMEDIATE_CONFLICT</para>
		<para>VIEWER_STOPPED_TUNER_BOOKING_CONFLICT</para>
		<para>VIEWER_STOPPED_DISK_CONFLICT</para>
		<para>VIEWER_BOOKING_DELETED</para>
		<para>POWER_FAILURE</para>
		<para>INSUFFICIENT_DISK_SPACE</para>
		<para>NO_EVENT_IN_SCHEDULE</para>
		<para>NO_CARD_DETECTED</para>
		<para>NO_TUNER_AVAILABLE</para>
		<para>NO_CA_AUTHORISATION</para>
		<para>RECORDED_CONTENT_MISSING</para>
		<para>SIGNAL_LOSS</para>
		<para>PMT_NOT_AVAILABLE</para>
		<para>ES_NOT_AVAILABLE</para>
		<para>RASP_OVERFLOW</para>
		<para>MAX_FILE_SIZE_EXCEEDED</para>
		<para>RECORDING_SUCCEEDED</para>
		<para>BOOKING_EXPIRED</para>
		<para>HEALTH_CHECK</para>
		<para>SWDOWNLOAD</para>
		<para>CONNECTION_LOST</para>
		<para>HTTP Error</para>
		<para>RESTARTED_AFTER_RECORDING_STOPPED</para>
		<para>PASSIVE_STANDBY</para>
		<para>NO_EXCEPTION</para>
		<para>Unknown exception (100)</para>
	</param>
	<param name="pManager">Manager</param>
	<remarks>
 Possible Error Codes:
 <para>305 - PCATFailure</para>
		<para>328 - INIFailure</para>
		<para>330 - TelnetFailure</para>
		<para>331 - CopyFileFailure</para>
		<para>332 - NoValidParameters</para>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.VerifyEventExceptionReason">
	<summary>
   Verify Event Exception Reason
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.PVR.RecordManualFromCurrent(System.String,System.String,System.Int32,IEX.ElementaryActions.Functionality.EnumFrequency,System.Boolean,System.Boolean,System.Boolean)">
	<summary>
    Record Manual Recording From Current Event
 </summary>
	<param name="EventKeyName">Key Of The Event</param>
	<param name="ChannelNumber">Channel Number</param>
	<param name="DurationInMin">Optional Parameter Default = -1 : Duration In Minutes</param>
	<param name="Frequency">Optional Parameter Default = ONE_TIME</param>
	<param name="VerifyBookingInPCAT">Optional Parameter Default = True : If True Verifies Booking In PCAT</param>
	<param name="IsConflict">Optional Parameter Default = False : If True Verify Conflict Appeared Before Recording Is Confirmed</param>
	<param name="NoEIT">Optional Parameter Default = False : If True Navigation to Manual Recording Is Different</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>309 - GetEpgTimeFailure</para>
		<para>322 - VerificationFailure</para>
		<para>328 - INIFailure</para>
		<para>330 - TelnetFailure</para>
		<para>331 - CopyFileFailure</para>
		<para>332 - NoValidParameters</para>
		<para>334 - VideoNotPresent</para>
		<para>339 - RecordEventFailure</para>
		<para>344 - ConflictFailure</para>
		<para>349 - ReturnToLiveFailure</para>
		<para>350 - ParsingFailure</para>
		<para>351 - SurfingFailure</para>
		<para>355 - TuneToChannelFailure</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.PVR.RecordManualFromPlanner(System.String,System.String,System.Int32,System.Int32,System.Int32,IEX.ElementaryActions.Functionality.EnumFrequency,System.Boolean,System.Boolean)">
	<summary>
   Record Manual Recording From Planner
 </summary>
	<param name="EventKeyName">Key Of The Event</param>
	<param name="ChannelName">Channel Name</param>
	<param name="DaysDelay">Optional Parameter Default = -1 : Adds Days From Current Time</param>
	<param name="MinutesDelayUntilBegining">Optional Parameter Default = -1 : Minutes Delay Until Beginning</param>
	<param name="DurationInMin">Optional Parameter Default = 1 : Duration Of Recording</param>
	<param name="Frequency">Optional Parameter Default = ONE_TIME</param>
	<param name="VerifyBookingInPCAT">Optional Parameter Default = True : If True Verifies Booking In PCAT</param>
	<param name="IsConflict">Optional Parameter Default = False : If True Verify Conflict Appeared Before Recording Is Confirmed</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>300 - NavigationFailure</para>
		<para>301 - DictionaryFailure</para>
		<para>302 - EmptyEpgInfoFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>305 - PCATFailure</para>
		<para>309 - GetEpgTimeFailure</para>
		<para>310 - GetEpgDateFailure</para>
		<para>322 - VerificationFailure</para>
		<para>328 - INIFailure</para>
		<para>330 - TelnetFailure</para>
		<para>331 - CopyFileFailure</para>
		<para>332 - NoValidParameters</para>
		<para>334 - VideoNotPresent</para>
		<para>339 - RecordEventFailure</para>
		<para>344 - ConflictFailure</para>
		<para>349 - ReturnToLiveFailure</para>
		<para>350 - ParsingFailure</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.PVR.RecordManualFromPlanner(System.String,System.Int32,System.Int32,System.Int32,System.Int32,IEX.ElementaryActions.Functionality.EnumFrequency,System.Boolean,System.Boolean)">
	<summary>
   Record Manual Recording From Planner
 </summary>
	<param name="EventKeyName">Key Of The Event</param>
	<param name="ChannelNumber">Channel Number</param>
	<param name="DaysDelay">Optional Parameter Default = -1 : Adds Days From Current Time</param>
	<param name="MinutesDelayUntilBegining">Optional Parameter Default = -1 : Minutes Delay Until Beginning</param>
	<param name="DurationInMin">Optional Parameter Default = 1 : Duration Of Recording</param>
	<param name="Frequency">Optional Parameter Default = ONE_TIME</param>
	<param name="VerifyBookingInPCAT">Optional Parameter Default = True : If True Verifies Booking In PCAT</param>
	<param name="IsConflict">Optional Parameter Default = False : If True Verify Conflict Appeared Before Recording Is Confirmed</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>300 - NavigationFailure</para>
		<para>301 - DictionaryFailure</para>
		<para>302 - EmptyEpgInfoFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>305 - PCATFailure</para>
		<para>309 - GetEpgTimeFailure</para>
		<para>310 - GetEpgDateFailure</para>
		<para>322 - VerificationFailure</para>
		<para>328 - INIFailure</para>
		<para>330 - TelnetFailure</para>
		<para>331 - CopyFileFailure</para>
		<para>332 - NoValidParameters</para>
		<para>334 - VideoNotPresent</para>
		<para>339 - RecordEventFailure</para>
		<para>344 - ConflictFailure</para>
		<para>349 - ReturnToLiveFailure</para>
		<para>350 - ParsingFailure</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.PVR.RecordManualFromPlanner(System.String,System.String,System.String,System.Int32,System.Int32,IEX.ElementaryActions.Functionality.EnumFrequency,System.Boolean,System.Boolean)">
	<summary>
   Record Manual Recording From Planner
 </summary>
	<param name="EventKeyName">Key Of The Event</param>
	<param name="ChannelName">Channel Name</param>
	<param name="StartTime">Start Time For The Manual Recording</param>
	<param name="DurationInMin">Duration Of Recording</param>
	<param name="DaysDelay">Optional Parameter Default = -1 : Adds Days From Current Time</param>
	<param name="Frequency">Optional Parameter Default = ONE_TIME</param>
	<param name="VerifyBookingInPCAT">Optional Parameter Default = True : If True Verifies Booking In PCAT</param>
	<param name="IsConflict">Optional Parameter Default = False : If True Verify Conflict Appeared Before Recording Is Confirmed</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>300 - NavigationFailure</para>
		<para>301 - DictionaryFailure</para>
		<para>302 - EmptyEpgInfoFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>305 - PCATFailure</para>
		<para>309 - GetEpgTimeFailure</para>
		<para>310 - GetEpgDateFailure</para>
		<para>322 - VerificationFailure</para>
		<para>328 - INIFailure</para>
		<para>330 - TelnetFailure</para>
		<para>331 - CopyFileFailure</para>
		<para>332 - NoValidParameters</para>
		<para>334 - VideoNotPresent</para>
		<para>339 - RecordEventFailure</para>
		<para>344 - ConflictFailure</para>
		<para>349 - ReturnToLiveFailure</para>
		<para>350 - ParsingFailure</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.PVR.RecordManualFromPlanner(System.String,System.Int32,System.String,System.Int32,System.Int32,IEX.ElementaryActions.Functionality.EnumFrequency,System.Boolean,System.Boolean)">
	<summary>
   Record Manual Recording From Planner
 </summary>
	<param name="EventKeyName">Key Of The Event</param>
	<param name="ChannelNumber">Channel Number</param>
	<param name="StartTime">Start Time For The Manual Recording</param>
	<param name="DurationInMin">Duration Of Recording</param>
	<param name="DaysDelay">Optional Parameter Default = -1 : Adds Days From Current Time</param>
	<param name="Frequency">Optional Parameter Default = ONE_TIME</param>
	<param name="VerifyBookingInPCAT">Optional Parameter Default = True : If True Verifies Booking In PCAT</param>
	<param name="IsConflict">Optional Parameter Default = False : If True Verify Conflict Appeared Before Recording Is Confirmed</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>300 - NavigationFailure</para>
		<para>301 - DictionaryFailure</para>
		<para>302 - EmptyEpgInfoFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>305 - PCATFailure</para>
		<para>309 - GetEpgTimeFailure</para>
		<para>310 - GetEpgDateFailure</para>
		<para>322 - VerificationFailure</para>
		<para>328 - INIFailure</para>
		<para>330 - TelnetFailure</para>
		<para>331 - CopyFileFailure</para>
		<para>332 - NoValidParameters</para>
		<para>334 - VideoNotPresent</para>
		<para>339 - RecordEventFailure</para>
		<para>344 - ConflictFailure</para>
		<para>349 - ReturnToLiveFailure</para>
		<para>350 - ParsingFailure</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.PVR.RecordCurrentEventFromBanner(System.String,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
	<summary>
   Recording Current Event From Action Bar
 </summary>
	<param name="EventKeyName">Key Of The Event</param>
	<param name="MinTimeBeforeEvEnd">Optional Parameter Default = -1 : Minutes Required Until End Of Event</param>
	<param name="IsResuming">Optional Parameter Default = False : If True Checks Resume Recording Milestones</param>
	<param name="VerifyIsRecordingInPCAT">Optional Parameter Default = True : If True Verify Is Recording In PCAT</param>
	<param name="IsConflict">Optional Parameter Default = False : If True Verify Conflict Appeared Before Recording Is Confirmed</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>301 - DictionaryFailure</para>
		<para>302 - EmptyEpgInfoFailure</para>
		<para>305 - PCATFailure</para>
		<para>323 - VerifyStateFailure</para>
		<para>328 - INIFailure</para>
		<para>330 - TelnetFailure</para>
		<para>331 - CopyFileFailure</para>
		<para>332 - NoValidParameters</para>
		<para>334 - VideoNotPresent</para>
		<para>337 - ParseEventTimeFailure</para>
		<para>339 - RecordEventFailure</para>
		<para>344 - ConflictFailure</para>
		<para>349 - ReturnToLiveFailure</para>
		<para>350 - ParsingFailure</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.PVR.BookFutureEventFromBanner(System.String,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
	<summary>
    Booking Future Event From Action Bar 
 </summary>
	<param name="EventKeyName">Key Of The Event</param>
	<param name="NumOfPresses">Optional Parameter Default = -1 : Number Of Left Presses From Current</param>
	<param name="MinTimeBeforeEvStart">Optional Parameter Default = 1 : Minimum Time Right For The Event To Start ( EXAMPLE : For Guard Time )</param>
	<param name="VerifyBookingInPCAT">Optional Parameter Default = True : If True Verify Is Booked In PCAT</param>
	<param name="ReturnToLive">Optional Parameter Default = True : If True Return To Live</param>
	<param name="IsConflict">Optional Parameter Default = False : If True Verify Conflict Appeared Before Recording Is Confirmed</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>301 - DictionaryFailure</para>
		<para>302 - EmptyEpgInfoFailure</para>
		<para>305 - PCATFailure</para>
		<para>323 - VerifyStateFailure</para>
		<para>328 - INIFailure</para>
		<para>330 - TelnetFailure</para>
		<para>331 - CopyFileFailure</para>
		<para>332 - NoValidParameters</para>
		<para>334 - VideoNotPresent</para>
		<para>337 - ParseEventTimeFailure</para>
		<para>338 - EventNotExistsFailure</para>
		<para>339 - RecordEventFailure</para>
		<para>344 - ConflictFailure</para>
		<para>347 - SelectEventFailure</para>
		<para>349 - ReturnToLiveFailure</para>
		<para>350 - ParsingFailure </para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.PVR.RecordCurrentEventFromGuide(System.String,System.String,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
	<summary>
   Recording Current Event From Guide
 </summary>
	<param name="EventKeyName">Key Of The Event</param>
	<param name="ChannelNumber">Channel Of The Event To Be Recorded</param>
	<param name="MinTimeBeforeEvEnd">Optional Parameter Default = -1 : Minutes Required Until End Of Event</param>
	<param name="VerifyBookingInPCAT">Optional Parameter Default = True : If True Verifies Event Booked In PCAT</param>
	<param name="ReturnToLive">Optional Parameter Default = True : If True Returns To Live Viewing</param>
	<param name="IsConflict">Optional Parameter Default = False : If True Verify Conflict Appeared Before Recording Is Confirmed</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>301 - DictionaryFailure</para>
		<para>302 - EmptyEpgInfoFailure</para>
		<para>305 - PCATFailure</para>
		<para>328 - INIFailure</para>
		<para>330 - TelnetFailure</para>
		<para>331 - CopyFileFailure</para>
		<para>332 - NoValidParameters</para>
		<para>334 - VideoNotPresent</para>
		<para>339 - RecordEventFailure</para>
		<para>344 - ConflictFailure</para>
		<para>349 - ReturnToLiveFailure</para>
		<para>350 - ParsingFailure</para>
		<para>355 - TuneToChannelFailure</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.PVR.RecordUsingRECkey(IEX.ElementaryActions.Functionality.EnumRecordIn,System.String,System.String,System.Int32,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
	<summary>
   Recording Using REC Key
 </summary>
	<param name="RecordIn">Can Be : Live, Guide, ChannelBar Or Action Bar</param>
	<param name="EventKeyName">Key Of The Event</param>
	<param name="ChannelNumber">Channel Of The Event To Be Recorded</param>
	<param name="MinTimeBeforeEvEnd">Optional Parameter Default = -1 : Minutes Required Until End Of Event</param>
	<param name="VerifyBookingInPCAT">Optional Parameter Default = True : If True Verifies Event Booked In PCAT</param>
	<param name="ReturnToLive">Optional Parameter Default = True : If True Returns To Live Viewing</param>
	<param name="IsConflict">Optional Parameter Default = False : If True Verify Conflict Appeared Before Recording Is Confirmed</param>
	<param name="IsCurrent">Optional Parameter Default = False : If true then book future event</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>301 - DictionaryFailure</para>
		<para>302 - EmptyEpgInfoFailure</para>
		<para>305 - PCATFailure</para>
		<para>328 - INIFailure</para>
		<para>330 - TelnetFailure</para>
		<para>331 - CopyFileFailure</para>
		<para>332 - NoValidParameters</para>
		<para>334 - VideoNotPresent</para>
		<para>339 - RecordEventFailure</para>
		<para>344 - ConflictFailure</para>
		<para>349 - ReturnToLiveFailure</para>
		<para>350 - ParsingFailure</para>
		<para>355 - TuneToChannelFailure</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.PVR.StopRecordUsingStopKey(IEX.ElementaryActions.Functionality.EnumRecordIn,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
	<summary>
  Stop Recording Using STOP Key
 </summary>
	<param name="RecordIn">Can Be : Live, Guide, ChannelBar Or Action Bar</param>
	<param name="EventKeyName">Key Of The Event</param>
	<param name="ChannelNumber">Channel Of The Event To Be Recorded</param>
	<param name="IsCurrent">Optional Parameter Default = False : If true then book future event</param>
	<param name="IsSeries">Optional Parameter default = False : If true then cancel the Entire Series</param>
	<param name="IsStopRecord">Optional Parameter default = True : If False then select NO and recording will not stop </param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>301 - DictionaryFailure</para>
		<para>302 - EmptyEpgInfoFailure</para>
		<para>305 - PCATFailure</para>
		<para>328 - INIFailure</para>
		<para>331 - CopyFileFailure</para>
		<para>332 - NoValidParameters</para>
		<para>334 - VideoNotPresent</para>
		<para>339 - RecordEventFailure</para>
		<para>344 - ConflictFailure</para>
		<para>349 - ReturnToLiveFailure</para>
		<para>350 - ParsingFailure</para>
		<para>355 - TuneToChannelFailure</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.PVR.BookFutureEventFromGuide(System.String,System.String,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
	<summary>
   Booking Future Event From Guide
 </summary>
	<param name="EventKeyName">Key Of The Event</param>
	<param name="ChannelNumber">Channel Of The Event To Be Recorded</param>
	<param name="NumberOfPresses">Optional Parameter Default = 1 : Number Of Right Presses From Current Event</param>
	<param name="MinTimeBeforeEvStart">Optional Parameter Default = 1 : Minimum Time Right For The Event To Start ( EXAMPLE : For Guard Time )</param>
	<param name="VerifyBookingInPCAT">Optional Parameter Default = True : If True Verifies Event Booked In PCAT</param>
	<param name="ReturnToLive">Optional Parameter Default = True : If True Returns To Live Viewing</param>
	<param name="IsConflict">Optional Parameter Default = True : If True Verify Conflict Appeared Before Recording Is Confirmed</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>300 - NavigationFailure</para>
		<para>301 - DictionaryFailure</para>
		<para>302 - EmptyEpgInfoFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>305 - PCATFailure</para>
		<para>306 - GetEventInfoFailure</para>
		<para>323 - VerifyStateFailure</para>
		<para>328 - INIFailure</para>
		<para>330 - TelnetFailure</para>
		<para>331 - CopyFileFailure</para>
		<para>332 - NoValidParameters</para>
		<para>334 - VideoNotPresent</para>
		<para>339 - RecordEventFailure</para>
		<para>344 - ConflictFailure</para>
		<para>347 - SelectEventFailure</para>
		<para>349 - ReturnToLiveFailure</para>
		<para>350 - ParsingFailure</para>
		<para>355 - TuneToChannelFailure</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.PVR.BookFutureEventFromGuide(System.String,System.String,System.String,System.String,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
	<summary>
   Booking Future Event From Guide
 </summary>
	<param name="EventKeyName">Key Of The Event</param>
	<param name="ChannelNumber">Channel Of The Event To Be Recorded</param>
	<param name="StartTime">Requested Exact Event Start Time</param>
	<param name="EndTime">Requested Exact Event Start Time</param>
	<param name="DaysDelay">Days Delay On Guide - Not Yet Supported</param>
	<param name="VerifyBookingInPCAT">Optional Parameter Default = True : If True Verifies Event Booked In PCAT</param>
	<param name="ReturnToLive">Optional Parameter Default = True : If True Returns To Live Viewing</param>
	<param name="IsConflict">Optional Parameter Default = True : If True Verify Conflict Appeared Before Recording Is Confirmed</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>300 - NavigationFailure</para>
		<para>301 - DictionaryFailure</para>
		<para>302 - EmptyEpgInfoFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>305 - PCATFailure</para>
		<para>306 - GetEventInfoFailure</para>
		<para>323 - VerifyStateFailure</para>
		<para>328 - INIFailure</para>
		<para>330 - TelnetFailure</para>
		<para>331 - CopyFileFailure</para>
		<para>332 - NoValidParameters</para>
		<para>334 - VideoNotPresent</para>
		<para>339 - RecordEventFailure</para>
		<para>344 - ConflictFailure</para>
		<para>346 - FindEventFailure</para>
		<para>347 - SelectEventFailure</para>
		<para>349 - ReturnToLiveFailure</para>
		<para>350 - ParsingFailure</para>
		<para>355 - TuneToChannelFailure</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.PVR.BookFutureEventFromGuide(System.String,System.String,System.String,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
	<summary>
   Booking Future Event From Guide
 </summary>
	<param name="EventKeyName">Key Of The Event</param>
	<param name="ChannelNumber">Channel Of The Event To Be Recorded</param>
	<param name="StartTime">Requested Exact Event Start Time</param>
	<param name="MinEventLength">Minimum Event Length</param>
	<param name="MaxEventLength">Max Event Length</param>
	<param name="DaysDelay">Days Delay On Guide - Not Yet Supported</param>
	<param name="VerifyBookingInPCAT">Optional Parameter Default = True : If True Verifies Event Booked In PCAT</param>
	<param name="ReturnToLive">Optional Parameter Default = True : If True Returns To Live Viewing</param>
	<param name="IsConflict">Optional Parameter Default = True : If True Verify Conflict Appeared Before Recording Is Confirmed</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>300 - NavigationFailure</para>
		<para>301 - DictionaryFailure</para>
		<para>302 - EmptyEpgInfoFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>305 - PCATFailure</para>
		<para>306 - GetEventInfoFailure</para>
		<para>323 - VerifyStateFailure</para>
		<para>328 - INIFailure</para>
		<para>330 - TelnetFailure</para>
		<para>331 - CopyFileFailure</para>
		<para>332 - NoValidParameters</para>
		<para>334 - VideoNotPresent</para>
		<para>339 - RecordEventFailure</para>
		<para>344 - ConflictFailure</para>
		<para>346 - FindEventFailure</para>
		<para>347 - SelectEventFailure</para>
		<para>349 - ReturnToLiveFailure</para>
		<para>350 - ParsingFailure</para>
		<para>355 - TuneToChannelFailure</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.PVR.ModifyManualRecording(System.String,System.String,System.String,System.String,System.Int32,IEX.ElementaryActions.Functionality.EnumFrequency,System.Boolean)">
	<summary>
    Modify Manual Recording From Planner
 </summary>
	<param name="EventKeyName">Key Of The Event</param>
	<param name="StartTime">Channel Name</param>
	<param name="EndTime">Channel Number If Entered Doing DCA</param>
	<param name="ChannelName">Optional Parameter Default = "" : The Channel Name</param>
	<param name="Days">Optional Parameter Default = 0 : Adds Or Substructing Days From Current Date</param>
	<param name="Frequency">Optional Parameter Default = ONE_TIME</param>
	<remarks>
 Possible Error Codes:
 <para>300 - NavigationFailure</para>
		<para>301 - DictionaryFailure</para>
		<para>302 - EmptyEpgInfoFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>305 - PCATFailure</para>
		<para>309 - GetEpgTimeFailure</para>
		<para>310 - GetEpgDateFailure</para>
		<para>322 - VerificationFailure</para>
		<para>328 - INIFailure</para>
		<para>330 - TelnetFailure</para>
		<para>331 - CopyFileFailure</para>
		<para>332 - NoValidParameters</para>
		<para>334 - VideoNotPresent</para>
		<para>339 - RecordEventFailure</para>
		<para>349 - ReturnToLiveFailure</para>
		<para>350 - ParsingFailure</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.PVR.SetKeepFlag(System.String,System.Boolean,System.Boolean)">
	<summary>
  Set Keep Or Un Keep On Planner Or Archive As Requested
 </summary>
	<param name="EventKeyName">Key Of The Event</param>
	<param name="SetKeep">If True Then Set To Keep If False Set To Un Keep</param>
	<param name="ReturnToLive">Optional Parameter Default = True : If True Returns To Live Viewing</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>300 - NavigationFailure</para>
		<para>301 - DictionaryFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>305 - PCATFailure</para>
		<para>306 - GetEventInfoFailure</para>
		<para>312 - SetEventKeepFailure</para>
		<para>321 - VerifyChannelAttributeFailure</para>
		<para>328 - INIFailure</para>
		<para>330 - TelnetFailure</para>
		<para>331 - CopyFileFailure</para>
		<para>332 - NoValidParameters</para>
		<para>334 - VideoNotPresent</para>
		<para>338 - EventNotExistsFailure</para>
		<para>346 - FindEventFailure</para>
		<para>347 - SelectEventFailure</para>
		<para>349 - ReturnToLiveFailure</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.PVR.StopRecordingFromBanner(System.String)">
	<summary>
   Stop Recording From Action Bar
 </summary>
	<param name="EventKeyName">Key Of The Event</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>301 - DictionaryFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>322 - VerificationFailure</para>
		<para>328 - INIFailure</para>
		<para>332 - NoValidParameters</para>
		<para>334 - VideoNotPresent</para>
		<para>338 - EventNotExistsFailure</para>
		<para>347 - SelectEventFailure</para>
		<para>348 - StopRecordEventFailure</para>
		<para>349 - ReturnToLiveFailure</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.PVR.CancelBookingFromBanner(System.String,System.Boolean,System.Boolean,System.Boolean)">
	<summary>
   Cancel Future Event Booking
 </summary>
	<param name="EventKeyName">Key Of The Event</param>
	<param name="VerifyCancelInPCAT">Optional Parameter Default = True : If True Verifies Event Cancelled In PCAT</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>301 - DictionaryFailure</para>
		<para>305 - PCATFailure</para>
		<para>322 - VerificationFailure</para>
		<para>328 - INIFailure</para>
		<para>330 - TelnetFailure</para>
		<para>331 - CopyFileFailure</para>
		<para>332 - NoValidParameters</para>
		<para>334 - VideoNotPresent</para>
		<para>338 - EventNotExistsFailure</para>
		<para>342 - CancelEventFailure</para>
		<para>347 - SelectEventFailure</para>
		<para>349 - ReturnToLiveFailure</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.PVR.CancelBookingFromPlanner(System.String,System.Boolean,System.Boolean,System.Boolean)">
	<summary>
   Cancel Booking From Planner Screen
 </summary>
	<param name="EventKeyName">Key Of The Event</param>
	<param name="VerifyCancelInPCAT">Optional Parameter Default = True : If True Verifies Event Cancelled In PCAT</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>305 - PCATFailure</para>
		<para>306 - GetEventInfoFailure</para>
		<para>321 - VerifyChannelAttributeFailure</para>
		<para>328 - INIFailure</para>
		<para>330 - TelnetFailure</para>
		<para>332 - NoValidParameters</para>
		<para>331 - CopyFileFailure</para>
		<para>338 - EventNotExistsFailure</para>
		<para>342 - CancelEventFailure</para>
		<para>345 - DeleteEventFailure</para>
		<para>346 - FindEventFailure</para>
		<para>347 - SelectEventFailure</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.PVR.CancelBookingFromPlanner(System.String,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
	<summary>
   Cancel Ocurrence Booking From Planner Screen
 </summary>
	<param name="EventKeyName">Key Of The Event</param>
	<param name="OccurrenceNumber">The Occurrence To Cancel From 1 To 14</param>
	<param name="VerifyCancelInPCAT">Optional Parameter Default = True : If True Verifies Event Cancelled In PCAT</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>305 - PCATFailure</para>
		<para>306 - GetEventInfoFailure</para>
		<para>321 - VerifyChannelAttributeFailure</para>
		<para>328 - INIFailure</para>
		<para>330 - TelnetFailure</para>
		<para>332 - NoValidParameters</para>
		<para>331 - CopyFileFailure</para>
		<para>338 - EventNotExistsFailure</para>
		<para>342 - CancelEventFailure</para>
		<para>345 - DeleteEventFailure</para>
		<para>346 - FindEventFailure</para>
		<para>347 - SelectEventFailure</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.PVR.CancelAllBookingsFromPlanner">
	<summary>
   Delete All Bookings In Planner
 </summary>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>301 - DictionaryFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>306 - GetEventInfoFailure</para>
		<para>328 - INIFailure</para>
		<para>334 - VideoNotPresent</para>
		<para>342 - CancelEventFailure</para>
		<para>347 - SelectEventFailure</para>
		<para>349 - ReturnToLiveFailure</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.PVR.VerifyEventInArchive(System.String,System.Boolean,System.Boolean,System.String,System.String,System.String)">
	<summary>
   Verify Event On Archive Screen
 </summary>
	<param name="EventKeyName">Key Of The Event</param>
	<param name="Navigate">Optional Parameter Default = True : If True Navigates To Archive</param>
	<param name="SupposedToFindEvent">Optional Parameter Default = True : If True Tries To Find Event On Archive Else Tries Not To Find It</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>300 - NavigationFailure</para>
		<para>301 - DictionaryFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>306 - GetEventInfoFailure</para>
		<para>328 - INIFailure</para>
		<para>321 - VerifyChannelAttributeFailure</para>
		<para>332 - NoValidParameters</para>
		<para>338 - EventNotExistsFailure</para>
		<para>346 - FindEventFailure</para>
		<para>347 - SelectEventFailure</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.PVR.VerifySortingInArchive(IEX.ElementaryActions.Functionality.EnumSortBy)">
	<summary>
    Verify Sorting On Archive Screen
 </summary>
	<param name="SortBy">Enum Can Be SortBy Time Or A-Z</param>
	<remarks>
 Possible Error Codes:
 <para>300 - NavigationFailure</para>
		<para>301 - DictionaryFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>306 - GetEventInfoFailure</para>
		<para>328 - INIFailure</para>
		<para>321 - VerifyChannelAttributeFailure</para>
		<para>332 - NoValidParameters</para>
		<para>338 - EventNotExistsFailure</para>
		<para>346 - FindEventFailure</para>
		<para>347 - SelectEventFailure</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.PVR.VerifySortingInPlanner(IEX.ElementaryActions.Functionality.EnumSortBy)">
	<summary>
    Verify Sorting On Planner Screen
 </summary>
	<param name="SortBy">Enum Can Be SortBy Time Or A-Z</param>
	<remarks>
 Possible Error Codes:
 <para>300 - NavigationFailure</para>
		<para>301 - DictionaryFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>306 - GetEventInfoFailure</para>
		<para>328 - INIFailure</para>
		<para>321 - VerifyChannelAttributeFailure</para>
		<para>332 - NoValidParameters</para>
		<para>338 - EventNotExistsFailure</para>
		<para>346 - FindEventFailure</para>
		<para>347 - SelectEventFailure</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.PVR.VerifyEventInPlanner(System.String,System.Boolean,System.Boolean,System.String,System.String,System.String)">
	<summary>
   Verify Event On Planner Screen
 </summary>
	<param name="EventKeyName">Key Of The Event</param>
	<param name="Navigate">Optional Parameter Default = True : If True Navigates To Planner</param>
	<param name="SupposedToFindEvent">Optional Parameter Default = True : If True Tries To Find Event On Planner Else Tries Not To Find It</param>
	<param name="StartTime">Optional Parameter Default = "" : If Entered Tries To Find Event On Planner By StartTime As Well</param>
	<param name="EndTime">Optional Parameter Default = "" : If Entered Tries To Find Event On Planner By EndTime As Well</param>
	<param name="EvDate">Optional Parameter Default = "" : If Entered Tries To Find Event On Planner By Date As Well</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>300 - NavigationFailure</para>
		<para>301 - DictionaryFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>306 - GetEventInfoFailure</para>
		<para>321 - VerifyChannelAttributeFailure</para>
		<para>328 - INIFailure</para>
		<para>332 - NoValidParameters</para>
		<para>338 - EventNotExistsFailure</para>
		<para>346 - FindEventFailure</para>
		<para>347 - SelectEventFailure</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.PVR.VerifyRecurringBookingInPlanner(System.String)">
	<summary>
    Verifying Event Recurring Events On Planner By Name,Date,StartTime And EndTime
 </summary>
	<param name="EventKeyName">The Key Of The Event</param>
	<returns></returns>
	<remarks></remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.PVR.VerifyRecordErrorInfo(System.String,IEX.ElementaryActions.Functionality.EnumRecordErr,System.String,System.String,System.Boolean)">
	<summary>
   Verify Event On Planner Screen
 </summary>
	<param name="EventKeyName">Key Of The Event</param>
	<param name="RecordError">Type of Error</param>
	<param name="StartGuardTime">Optional Parameter Default = "" : If Entered Tries To Find Event On Planner By StartTime with Guard Time As Well</param>
	<param name="EndGuardTime">Optional Parameter Default = "" : If Entered Tries To Find Event On Planner By EndTime with Guard Time As Well</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>300 - NavigationFailure</para>
		<para>301 - DictionaryFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>306 - GetEventInfoFailure</para>
		<para>321 - VerifyChannelAttributeFailure</para>
		<para>328 - INIFailure</para>
		<para>332 - NoValidParameters</para>
		<para>338 - EventNotExistsFailure</para>
		<para>346 - FindEventFailure</para>
		<para>347 - SelectEventFailure</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.PVR.DeleteRecordFromArchive(System.String,System.Boolean,System.Boolean,System.Boolean)">
	<summary>
   Deletes Event From Archive
 </summary>
	<param name="EventKeyName">Key Of The Event</param>
	<param name="InReviewBuffer">Optional Parameter Default = True : True If The Event Is In The Persistent Review Buffer</param>
	<param name="Navigate">Optional Parameter Default = True : If True Navigates To Archive</param>
	<param name="VerifyDeletedInPCAT">Optional Parameter Default = True : If True Verifies Event Deleted In PCAT</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>300 - NavigationFailure</para>
		<para>301 - DictionaryFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>305 - PCATFailure</para>
		<para>306 - GetEventInfoFailure</para>
		<para>328 - INIFailure</para>
		<para>321 - VerifyChannelAttributeFailure</para>
		<para>330 - TelnetFailure</para>
		<para>331 - CopyFileFailure</para>
		<para>332 - NoValidParameters</para>
		<para>338 - EventNotExistsFailure</para>
		<para>345 - DeleteEventFailure</para>
		<para>346 - FindEventFailure</para>
		<para>347 - SelectEventFailure</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.PVR.DeleteAllRecordsFromArchive(System.Boolean)">
	<summary>
   Deletes All Events From Archive
 </summary>
	<param name="Navigate">Optional Parameter Default = True : If True Navigates To Archive</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>301 - DictionaryFailure</para>
		<para>345 - DeleteEventFailure</para>
		<para>347 - SelectEventFailure</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.PVR.DeleteFailedRecordedEvent(System.String,System.Boolean)">
	<summary>
	</summary>
	<param name="EventKeyName">Key Of The Event</param>
	<param name="VerifyDeletedInPCAT">Optional Parameter Default = True : If True Verifies Event Deleted In PCAT</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
Possible Error Codes:
 <para>300 - NavigationFailure</para>
		<para>301 - DictionaryFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>305 - PCATFailure</para>
		<para>306 - GetEventInfoFailure</para>
		<para>328 - INIFailure</para>
		<para>321 - VerifyChannelAttributeFailure</para>
		<para>330 - TelnetFailure</para>
		<para>331 - CopyFileFailure</para>
		<para>332 - NoValidParameters</para>
		<para>338 - EventNotExistsFailure</para>
		<para>345 - DeleteEventFailure</para>
		<para>346 - FindEventFailure</para>
		<para>347 - SelectEventFailure</para></remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.PVR.LockEventFromArchive(System.String,System.Boolean)">
	<summary>
   Lock Event From Archive
 </summary>
	<param name="EventKeyName">Key Of The Event</param>
	<param name="ReturnToLive">Optional Parameter Default = True : If True Returns To Live Viewing</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>300 - NavigationFailure</para>
		<para>301 - DictionaryFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>306 - GetEventInfoFailure</para>
		<para>328 - INIFailure</para>
		<para>321 - VerifyChannelAttributeFailure</para>
		<para>332 - NoValidParameters</para>
		<para>334 - VideoNotPresent</para>
		<para>338 - EventNotExistsFailure</para>
		<para>346 - FindEventFailure</para>
		<para>347 - SelectEventFailure</para>
		<para>349 - ReturnToLiveFailure</para>
		<para>359 - LockUnlockFailure</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.PVR.LockEventFromPlanner(System.String,System.Boolean)">
	<summary>
   Lock Event From Planner
 </summary>
	<param name="EventKeyName">Key Of The Event</param>
	<param name="ReturnToLive">Optional Parameter Default = True : If True Returns To Live Viewing</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>300 - NavigationFailure</para>
		<para>301 - DictionaryFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>306 - GetEventInfoFailure</para>
		<para>321 - VerifyChannelAttributeFailure</para>
		<para>328 - INIFailure</para>
		<para>332 - NoValidParameters</para>
		<para>334 - VideoNotPresent</para>
		<para>338 - EventNotExistsFailure</para>
		<para>346 - FindEventFailure</para>
		<para>347 - SelectEventFailure</para>
		<para>349 - ReturnToLiveFailure</para>
		<para>359 - LockUnlockFailure</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.PVR.UnLockEventFromArchive(System.String,System.Boolean)">
	<summary>
   UnLock Event From Archive
 </summary>
	<param name="EventKeyName">Key Of The Event</param>
	<param name="ReturnToLive">Optional Parameter Default = True : If True Returns To Live Viewing</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>300 - NavigationFailure</para>
		<para>301 - DictionaryFailure</para>
		<para>302 - EmptyEpgInfoFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>306 - GetEventInfoFailure</para>
		<para>321 - VerifyChannelAttributeFailure</para>
		<para>322 - VerificationFailure</para>
		<para>328 - INIFailure</para>
		<para>332 - NoValidParameters</para>
		<para>334 - VideoNotPresent</para>
		<para>338 - EventNotExistsFailure</para>
		<para>346 - FindEventFailure</para>
		<para>347 - SelectEventFailure</para>
		<para>349 - ReturnToLiveFailure</para>
		<para>359 - LockUnlockFailure</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.PVR.UnLockEventFromPlanner(System.String,System.Boolean)">
	<summary>
   UnLock Event From Planner
 </summary>
	<param name="EventKeyName">Key Of The Event</param>
	<param name="ReturnToLive">Optional Parameter Default = True : If True Returns To Live Viewing</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>300 - NavigationFailure</para>
		<para>301 - DictionaryFailure</para>
		<para>302 - EmptyEpgInfoFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>306 - GetEventInfoFailure</para>
		<para>321 - VerifyChannelAttributeFailure</para>
		<para>328 - INIFailure</para>
		<para>332 - NoValidParameters</para>
		<para>334 - VideoNotPresent</para>
		<para>338 - EventNotExistsFailure</para>
		<para>346 - FindEventFailure</para>
		<para>347 - SelectEventFailure</para>
		<para>349 - ReturnToLiveFailure</para>
		<para>359 - LockUnlockFailure</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.PVR.StopRecordingFromArchive(System.String,System.Boolean)">
	<summary>
   Stops Recording Event From Archive
 </summary>
	<param name="EventKeyName">Key Of The Event</param>
	<param name="Navigate">Optional Parameter Default = True : If True Navigates To Archive</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>300 - NavigationFailure</para>
		<para>301 - DictionaryFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>306 - GetEventInfoFailure</para>
		<para>328 - INIFailure</para>
		<para>321 - VerifyChannelAttributeFailure</para>
		<para>332 - NoValidParameters</para>
		<para>338 - EventNotExistsFailure</para>
		<para>346 - FindEventFailure</para>
		<para>347 - SelectEventFailure</para>
		<para>348 - StopRecordEventFailure</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.PVR.PlaybackRecFromArchive(System.String,System.Int32,System.Boolean,System.Boolean,System.String,System.String,System.String)">
	<summary>
   Playback Event From Archive 
   If SecToPlay=0 And VerifyEOF=False Then Plays The Event And Exit The EA
   If SecToPlay=0 And VerifyEOF=True Then Plays The Event Until End And Verifies EOF Then Exit EA 
 </summary>
	<param name="EventKeyName">Key Of The Event</param>
	<param name="SecToPlay">Seconds To Play If 0 And VerifyEOF Is True Playes Until End Else If Verify EOF Is False Exit The EA.If SecToPlay Is Not Equal To 0 Then Plays The Event SecToPlay And StopPlayback</param>
	<param name="FromBeginning">If Already Played To Play From The Beginning Or Last Viewed</param>
	<param name="VerifyEOF">If True Verify Playback Until End</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>300 - NavigationFailure</para>
		<para>301 - DictionaryFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>305 - PCATFailure</para>
		<para>306 - GetEventInfoFailure</para>
		<para>328 - INIFailure</para>
		<para>320 - VerifyEofBofFailure</para>
		<para>321 - VerifyChannelAttributeFailure</para>
		<para>322 - VerificationFailure</para>
		<para>328 - INIFailure</para>
		<para>330 - TelnetFailure</para>
		<para>331 - CopyFileFailure</para>
		<para>332 - NoValidParameters</para>
		<para>338 - EventNotExistsFailure</para>
		<para>340 - PlayEventFailure</para>
		<para>343 - StopPlayEventFailure</para>
		<para>346 - FindEventFailure</para>
		<para>347 - SelectEventFailure</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.PVR.PlaybackRecFromArchive_LockedEvent(System.String,System.Int32,System.Boolean,System.Boolean,System.String,System.String,System.String)">
	<summary>
   Playback Event From Archive With Entering PIN
   If SecToPlay=0 And VerifyEOF=False Then Plays The Event And Exit The EA
   If SecToPlay=0 And VerifyEOF=True Then Plays The Event Until End And Verifies EOF Then Exit EA 
 </summary>
	<param name="EventKeyName">Key Of The Event</param>
	<param name="SecToPlay">Seconds To Play If 0 And VerifyEOF Is True Playes Until End Else If Verify EOF Is False Exit The EA.If SecToPlay Is Not Equal To 0 Then Plays The Event SecToPlay And StopPlayback</param>
	<param name="FromBeginning">If Already Played To Play From The Beginning Or Last Viewed</param>
	<param name="VerifyEOF">If True Verify Playback Until End</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>300 - NavigationFailure</para>
		<para>301 - DictionaryFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>305 - PCATFailure</para>
		<para>306 - GetEventInfoFailure</para>
		<para>328 - INIFailure</para>
		<para>320 - VerifyEofBofFailure</para>
		<para>321 - VerifyChannelAttributeFailure</para>
		<para>322 - VerificationFailure</para>
		<para>328 - INIFailure</para>
		<para>330 - TelnetFailure</para>
		<para>331 - CopyFileFailure</para>
		<para>332 - NoValidParameters</para>
		<para>338 - EventNotExistsFailure</para>
		<para>340 - PlayEventFailure</para>
		<para>343 - StopPlayEventFailure</para>
		<para>346 - FindEventFailure</para>
		<para>347 - SelectEventFailure</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.PVR.StopPlayback(System.Boolean)">
	<summary>
    Stop Current Playback
 </summary>
	<param name="IsReviewBuffer">Optional Parameter Default = False : If True Stop From Review Buffer Else From Playback</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>304 - IRVerificationFailure</para>
		<para>322 - VerificationFailure</para>
		<para>328 - INIFailure</para>
		<para>343 - StopPlayEventFailure</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.PVR.SetTrickModeSpeed(System.String,System.Double,System.Boolean,System.Boolean)">
	<summary>
   Setting Trickmode Speed And Checkes BOF or EOF
 </summary>
	<param name="EventKeyName">Key Of The Event - "RB" For Review Buffer Or Event Key Name For Regular Playback</param>
	<param name="Speed">For Example : 1 For Play, 0 For Pause,0.5,2,6,12,30</param>
	<param name="Verify_EOF_BOF">If True Verifies EOF Or BOF According To Direction</param>
	<param name="IsReviewBufferFull">Optional Parameter Default = False : If True Review Buffer Full</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>303 - FasVerificationFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>305 - PCATFailure</para>
		<para>307 - GetStreamInfoFailure</para>
		<para>313 - SetTrickModeSpeedFailure</para>
		<para>320 - VerifyEofBofFailure</para>
		<para>322 - VerificationFailure</para>
		<para>328 - INIFailure</para>
		<para>330 - TelnetFailure</para>
		<para>331 - CopyFileFailure</para>
		<para>332 - NoValidParameters</para>
		<para>338 - EventNotExistsFailure</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.PVR.VerifyPlaybackEOFBOF(System.Int64,System.Double,System.Boolean)">
	<summary>
  Verifies EOF/BOF Of Playback Event That Is Currently Playing 
 </summary>
	<param name="DurationInSec">Duration Of The Event Or Played Duration</param>
	<param name="Speed">Speed Of Trickmode</param>
	<param name="EOF">Optional Parameter Default = False : If True EOF Else BOF</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>320 - VerifyEofBofFailure</para>
		<para>322 - VerificationFailure</para>
		<para>328 - INIFailure</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.PVR.PauseFromActionBar">
	<summary>
   Select And Pause From Action Bar Menu
 </summary>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>303 - FasVerificationFailure</para>
		<para>328 - INIFailure</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.PVR.Skip(System.Boolean,System.Boolean,IEX.ElementaryActions.Functionality.EnumVideoSkip,System.Int32)">
	<summary>
 Doing skip on trickmode bar
 </summary>
	<param name="direction">Direction - Madatory - direction of skip -  True if Forward else False. No default value</param>
	<param name="PlaybackContext">PlaybackContext - Mandatory - whether RB or Playback  </param>
	<param name="NumOfSkipPoints">NumofSkipPoints - optional - Number of skips to be done. Default value = 0 (check if you can set nothing as default value)</param>
	<param name="SkipDurationSetting">SkipDurationSetting -  Current setting value for skip. Default value will be fetched from project ini (this includes the value - "Last Event Boundary")</param>
	<returns></returns>
	<remarks>
		<returns>IEXGateway._IEXResult</returns>
 Possible Error Codes:
 <para>303 - FasVerificationFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>313 - SetTrickModeSpeedFailure</para>
		<para>318 - SetSkipFailure</para>
		<para>328 - INIFailure</para>
		<para>332 - NoValidParameters</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.PVR.CancelBookingFromGuide(System.String,System.Boolean,System.Boolean,System.Boolean)">
	<summary>
    Canceling Booking From Guide
 </summary>
	<param name="EventKeyName">Key Of The Event</param>
	<param name="VerifyCanceledInPCAT">Optional Parameter Default = True : If True Verifies Event Canceled In PCAT</param>
	<param name="ReturnToLive">Optional Parameter Default = True : If True Returns To Live Viewing</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>300 - NavigationFailure</para>
		<para>301 - DictionaryFailure</para>
		<para>302 - EmptyEpgInfoFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>305 - PCATFailure</para>
		<para>306 - GetEventInfoFailure</para>
		<para>322 - VerificationFailure</para>
		<para>328 - INIFailure</para>
		<para>330 - TelnetFailure</para>
		<para>331 - CopyFileFailure</para>
		<para>332 - NoValidParameters</para>
		<para>334 - VideoNotPresent</para>
		<para>338 - EventNotExistsFailure</para>
		<para>342 - CancelEventFailure</para>
		<para>346 - FindEventFailure</para>
		<para>347 - SelectEventFailure</para>
		<para>349 - ReturnToLiveFailure</para>
		<para>355 - TuneToChannelFailure</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.PVR.ResolveConflict(System.String,System.String,System.Boolean,System.Int32)">
	<summary>
  Resolves recording and booking conflicts
 </summary>
	<param name="EventKeyName">Key Of The Event</param>
	<param name="ResolveOption">Use: DEFER, AUTOMATICALLY, MANUALLY, CANCEL BOOKING</param>
	<param name="VerifyInPCAT">If True Verifies Event Booked or Canceled In PCAT</param>
	<param name="EventToCancel">Optional Parameter Default = 1 : Not Implemented</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>301 - DictionaryFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>305 - PCATFailure</para>
		<para>328 - INIFailure</para>
		<para>330 - TelnetFailure</para>
		<para>331 - CopyFileFailure</para>
		<para>332 - NoValidParameters</para>
		<para>338 - EventNotExistsFailure</para>
		<para>339 - RecordEventFailure</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.PVR.VerifyEventSchedule(IEX.ElementaryActions.Functionality.EnumEventOccures,System.String)">
	<summary>
   Compares Current EPG Time And Given Event Times
 </summary>
	<param name="EventOccures">Can Be : Past,Current Or Future</param>
	<param name="EventTimes">Event Time In Format HH:MM - HH:MM</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>309 - GetEpgTimeFailure</para>
		<para>350 - ParsingFailure</para>
		<para>362 - TimeFailure </para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.PVR.NavigateToArchive">
	<summary>
   Navigates To Archive 
 </summary>
	<returns>IEXGateway._IEXResult</returns>
	<remarks></remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.PVR.NavigateToPlanner">
	<summary>
   Navigates To Planner
 </summary>
	<returns>IEXGateway._IEXResult</returns>
	<remarks></remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.STBSettings.FactoryReset(System.Boolean,System.Boolean,System.String)">
	<summary>
   Sets Banner Display Time On Stb Settings
 </summary>
	<param name="SaveRecordings"> Save or delete existing recordings while factory reset</param>
	<param name="KeepCurrentSettings"> Keep or revert the settings while factory reset</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>301 - DictionaryFailure</para>
		<para>302 - EmptyEpgInfoFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>314 - SetSettingsFailure</para>
		<para>370 - FactoryResetFailure</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.STBSettings.SetBannerDisplayTime(IEX.ElementaryActions.Functionality.EnumChannelBarTimeout)">
	<summary>
   Sets Banner Display Time On Stb Settings
 </summary>
	<param name="DisplayInSec">Banner Display In Seconds : 5 , 7 or 10</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>301 - DictionaryFailure</para>
		<para>302 - EmptyEpgInfoFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>314 - SetSettingsFailure</para>
		<para>334 - VideoNotPresent</para>
		<para>349 - ReturnToLiveFailure</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.STBSettings.SetGuardTime(System.Boolean,IEX.ElementaryActions.Functionality.EnumGuardTime,IEX.ElementaryActions.Functionality.EnumGuardTime)">
	<summary>
   Sets Start/End Guard Time On Stb Settings
 </summary>
	<param name="IsStart">If True Sets START Else Sets End</param>
	<param name="GTCurrentVal">The Current Value Expected On Guard Time</param>
	<param name="GTValueToSet">If GTCurrent Is NOT_AVAILABLE Sets The Value</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>301 - DictionaryFailure</para>
		<para>302 - EmptyEpgInfoFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>314 - SetSettingsFailure</para>
		<para>322 - VerificationFailure</para>
		<para>332 - NoValidParameters</para>
		<para>334 - VideoNotPresent</para>
		<para>349 - ReturnToLiveFailure</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.STBSettings.SetGuardTime(System.Boolean,System.String)">
	<summary>
 Sets Start/End Guard Time On STB Settings
 </summary>
	<param name="isStartToBeSet">If True sets Start Guard Time else sets End Guard Time</param>
	<param name="valueToBeSet">The value to be set in string</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
  Possible Error Codes:
 <para>301 - DictionaryFailure</para>
		<para>302 - EmptyEpgInfoFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>314 - SetSettingsFailure</para>
		<para>322 - VerificationFailure</para>
		<para>332 - NoValidParameters</para>
		<para>334 - VideoNotPresent</para>
		<para>349 - ReturnToLiveFailure</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.STBSettings.SetSubtitlesPrefs(System.Boolean,IEX.ElementaryActions.Functionality.EnumLanguage)">
	<summary>
  Sets Subtitles On Stb Settings
 </summary>
	<param name="AreSubtitlesOn">If True Sets To ON Else To OFF</param>
	<param name="LanguageToSet">If Empty Default Else Sets Language</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>301 - DictionaryFailure</para>
		<para>302 - EmptyEpgInfoFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>314 - SetSettingsFailure</para>
		<para>332 - NoValidParameters</para>
		<para>334 - VideoNotPresent</para>
		<para>349 - ReturnToLiveFailure</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.STBSettings.SetReminderNotifications(System.Boolean)">
	<summary>
  Sets Reminder Notification
 </summary>
	<param name="SetRemindersOn">If True Sets To ON Else To OFF</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>301 - DictionaryFailure</para>
		<para>314 - SetSettingsFailure</para>
		<para>334 - VideoNotPresent</para>
		<para>349 - ReturnToLiveFailure</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.STBSettings.SetSkipForwardInterval(IEX.ElementaryActions.Functionality.EnumVideoSkip)">
	<summary>
   Sets Skip Forward Interval On Stb Settings
 </summary>
	<param name="SkipIntervalInSec">Optional Parameter Default = BOOKMARKMODE : Skip Interval Can Be : BOOKMARKMODE,10,30,60,300,600</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>301 - DictionaryFailure</para>
		<para>302 - EmptyEpgInfoFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>314 - SetSettingsFailure</para>
		<para>334 - VideoNotPresent</para>
		<para>349 - ReturnToLiveFailure</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.STBSettings.SetSkipBackwardInterval(IEX.ElementaryActions.Functionality.EnumVideoSkip)">
	<summary>
   Sets Skip Backward Interval On Stb Settings
 </summary>
	<param name="SkipIntervalInSec">Optional Parameter Default = BOOKMARKMODE : Skip Interval Can Be : BOOKMARKMODE,10,30,60,300,600</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>301 - DictionaryFailure</para>
		<para>302 - EmptyEpgInfoFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>314 - SetSettingsFailure</para>
		<para>334 - VideoNotPresent</para>
		<para>349 - ReturnToLiveFailure</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.STBSettings.SetParentalControlAgeLimit(IEX.ElementaryActions.Functionality.EnumParentalControlAge)">
	<summary>
   Sets Parental Control Age Limit Settings
 </summary>
	<param name="Age">Age Can Be : 3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,16 18,G,PG,AP 12,Off</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>300 - NavigationFailure</para>
		<para>301 - DictionaryFailure</para>
		<para>302 - EmptyEpgInfoFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>314 - SetSettingsFailure</para>
		<para>322 - VerificationFailure</para>
		<para>328 - INIFailure</para>
		<para>332 - NoValidParameters</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.STBSettings.SetPurchaseProtection(System.Boolean)">
	<summary>
   Activate/deactivate purchase protection
 </summary>
	<returns>IEXGateway._IEXResult</returns>
	<remarks></remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.STBSettings.SetPreferredAudioLanguage(IEX.ElementaryActions.Functionality.EnumLanguage)">
	<summary>
   Set preferred audio language 
 </summary>
	<returns>IEXGateway._IEXResult</returns>
	<remarks></remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.STBSettings.SetLockChannel(System.String)">
	<summary>
   Locking Channel From Parental Control
 </summary>
	<param name="ChannelName">Requested Channel Name</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>300 - NavigationFailure</para>
		<para>301 - DictionaryFailure</para>
		<para>302 - EmptyEpgInfoFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>322 - VerificationFailure</para>
		<para>328 - INIFailure</para>
		<para>357 - LockUnlockChannelFailure</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.STBSettings.SetLockChannel(System.Int32)">
	<summary>
   Locking Channel From Parental Control
 </summary>
	<param name="ChannelNumber">Requested Channel Number</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>300 - NavigationFailure</para>
		<para>301 - DictionaryFailure</para>
		<para>302 - EmptyEpgInfoFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>322 - VerificationFailure</para>
		<para>328 - INIFailure</para>
		<para>357 - LockUnlockChannelFailure</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.STBSettings.SetUnLockChannel(System.String,System.Boolean)">
	<summary>
   UnLocking Channel From Parental Control
 </summary>
	<param name="ChannelName">Requested Channel Name</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>300 - NavigationFailure</para>
		<para>301 - DictionaryFailure</para>
		<para>302 - EmptyEpgInfoFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>314 - SetSettingsFailure</para>
		<para>328 - INIFailure</para>
		<para>357 - LockUnlockChannelFailure</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.STBSettings.SetUnLockChannel(System.Int32,System.Boolean)">
	<summary>
   UnLocking Channel From Parental Control
 </summary>
	<param name="ChannelNumber">Requested Channel Name</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>300 - NavigationFailure</para>
		<para>301 - DictionaryFailure</para>
		<para>302 - EmptyEpgInfoFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>314 - SetSettingsFailure</para>
		<para>328 - INIFailure</para>
		<para>357 - LockUnlockChannelFailure</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.STBSettings.SetSeriesLinkChannels(IEX.ElementaryActions.Functionality.EnumChannelSelection)">
	<summary>
   Sets Series Link Channel Configuration
 </summary>
	<param name="ChannelSelection">EnumChannelSelection : From_Single_Channel or From_All_Channels</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>301 - DictionaryFailure</para>
		<para>302 - EmptyEpgInfoFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>314 - SetSettingsFailure</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.STBSettings.SetFavoriteChannelNameList(System.String,IEX.ElementaryActions.Functionality.EnumFavouriteIn)">
	<summary>
   Setting 1 Or More Channel(s) As Favorite
 </summary>
	<param name="ChannelNameList">Requested Channel Name(s) - If Several Channel Names Then Use Comma As Separator</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>300 - NavigationFailure</para>
		<para>302 - EmptyEpgInfoFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>314 - SetSettingsFailure</para>
		<para>332 - NoValidParameters</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.STBSettings.UnsetFavoriteChannelNameList(System.String,IEX.ElementaryActions.Functionality.EnumFavouriteIn)">
	<summary>
   Removing 1 Channel Or More From Favorites
 </summary>
	<param name="ChannelNameList">Requested Channel Name(s) - If Several Channel Names Then Use Comma As Separator</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>300 - NavigationFailure</para>
		<para>302 - EmptyEpgInfoFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>314 - SetSettingsFailure</para>
		<para>332 - NoValidParameters</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.STBSettings.SetFavoriteChannelNumList(System.String,IEX.ElementaryActions.Functionality.EnumFavouriteIn)">
	<summary>
   Setting 1 Or More Channel(s) As Favorite
 </summary>
	<param name="ChannelNumList">Requested Channel Number(s) - If Several Channel Numbers Then Use Comma As Separator</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>300 - NavigationFailure</para>
		<para>302 - EmptyEpgInfoFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>314 - SetSettingsFailure</para>
		<para>332 - NoValidParameters</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.STBSettings.UnsetFavoriteChannelNumList(System.String,IEX.ElementaryActions.Functionality.EnumFavouriteIn)">
	<summary>
   Removing 1 Channel Or More From Favorites
 </summary>
	<param name="ChannelNumList">Requested Channel Number(s) - If Several Channel Numbers Then Use Comma As Separator</param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>300 - NavigationFailure</para>
		<para>302 - EmptyEpgInfoFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>314 - SetSettingsFailure</para>
		<para>332 - NoValidParameters</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.STBSettings.SetTvGuideBackgroundAsSolid">
	<summary>
   Setting The TV Guide Background As Solid
 </summary>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>300 - NavigationFailure</para>
		<para>302 - EmptyEpgInfoFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>314 - SetSettingsFailure</para>
		<para>332 - NoValidParameters</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.STBSettings.SetTvGuideBackgroundAsTransparent">
	<summary>
   Setting The TV Guide Background As Transparent
 </summary>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>300 - NavigationFailure</para>
		<para>302 - EmptyEpgInfoFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>314 - SetSettingsFailure</para>
		<para>332 - NoValidParameters</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.STBSettings.ChangePinCode(System.String,System.String)">
	<summary>
 Changing the Pin code to newPin 
 </summary>
	<param name="oldPin"></param>
	<param name="newPin"></param>
	<returns>IEXGateway._IEXResult</returns>
	<remarks></remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.STBSettings.SetPowerMode(System.String,System.String)">
	<summary>
   Setting the Power Mode Usage
 </summary>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>300 - NavigationFailure</para>
		<para>302 - EmptyEpgInfoFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>314 - SetSettingsFailure</para>
		<para>332 - NoValidParameters</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.STBSettings.SetAutoStandBy(System.String)">
	<summary>
   Setting the Power Mode Usage
 </summary>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>300 - NavigationFailure</para>
		<para>302 - EmptyEpgInfoFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>314 - SetSettingsFailure</para>
		<para>332 - NoValidParameters</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.STBSettings.ActivateAutoStandByAfterTime(System.String)">
	<summary>
   Activating Auto Stand By After Time
 </summary>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>300 - NavigationFailure</para>
		<para>302 - EmptyEpgInfoFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>314 - SetSettingsFailure</para>
		<para>332 - NoValidParameters</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.STBSettings.VerifyPowerMode(System.String,System.Boolean,System.String,System.String,System.String,System.Boolean,System.Boolean)">
	<summary>
  Verify Power Mode
 </summary>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>300 - NavigationFailure</para>
		<para>302 - EmptyEpgInfoFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>314 - SetSettingsFailure</para>
		<para>332 - NoValidParameters</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.STBSettings.SetNightTime(System.String,System.String)">
	<summary>
  Set Night Time
 </summary>
	<returns>IEXGateway._IEXResult</returns>
	<remarks>
 Possible Error Codes:
 <para>300 - NavigationFailure</para>
		<para>302 - EmptyEpgInfoFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>314 - SetSettingsFailure</para>
		<para>332 - NoValidParameters</para>
	</remarks>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.PauseFromActionBar.#ctor(IEX.ElementaryActions.Functionality.Manager)">
	<param name="pManager">Manager</param>
	<remarks>
 Possible Error Codes:
 <para>303 - FasVerificationFailure</para>
		<para>328 - INIFailure</para>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.PauseFromActionBar">
	<summary>
   Select And Pause From Action Bar Menu
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.NavigateToPlanner.#ctor(IEX.ElementaryActions.Functionality.Manager)">
	<param name="pManager">Manager</param>
	<remarks>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.NavigateToPlanner">
	<summary>
  Navigates To Planner
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.SetParentalControlAgeLimit.#ctor(IEX.ElementaryActions.Functionality.EnumParentalControlAge,IEX.ElementaryActions.Functionality.Manager)">
	<param name="Age">Age Can Be : 3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,16 18,G,PG,AP 12,Off</param>
	<param name="pManager">Manager</param>
	<remarks>
 Possible Error Codes:
 <para>300 - NavigationFailure</para>
		<para>301 - DictionaryFailure</para>
		<para>302 - EmptyEpgInfoFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>314 - SetSettingsFailure</para>
		<para>322 - VerificationFailure</para>
		<para>328 - INIFailure</para>
		<para>332 - NoValidParameters</para>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.SetParentalControlAgeLimit">
	<summary>
   Sets Parental Control Age Limit Settings
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.VerifyPlaybackEOFBOF.#ctor(System.Int64,System.Double,System.Boolean,IEX.ElementaryActions.Functionality.Manager)">
	<param name="DurationInSec">Duration Of The Event Or Played Duration</param>
	<param name="Speed">Speed Of Trickmode</param>
	<param name="Eof">Optional Parameter Default = False : If True EOF Else BOF</param>
	<param name="pManager">Manager</param>
	<remarks>
 Possible Error Codes:
 <para>320 - VerifyEofBofFailure</para>
		<para>322 - VerificationFailure</para>
		<para>328 - INIFailure</para>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.VerifyPlaybackEOFBOF">
	<summary>
  Verifies EOF/BOF Of Playback Event That Is Currently Playing 
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.SetTrickModeSpeed.#ctor(System.String,System.Double,System.Boolean,System.Boolean,IEX.ElementaryActions.Functionality.Manager)">
	<param name="EventKeyName">Key Of The Event - "RB" For Review Buffer Or Event Key Name For Regular Playback</param>
	<param name="Speed">For Example : 1 For Play, 0 For Pause,0.5,2,6,12,30</param>
	<param name="Verify_EOF_BOF">If True Verifies EOF Or BOF According To Direction</param>
	<param name="IsReviewBufferFull">Optional Parameter Default = False : If True Review Buffer Full</param>
	<param name="pManager">Manager</param>
	<remarks>
 Possible Error Codes:
 <para>303 - FasVerificationFailure</para>
		<para>304 - IRVerificationFailure</para>
		<para>305 - PCATFailure</para>
		<para>307 - GetStreamInfoFailure</para>
		<para>313 - SetTrickModeSpeedFailure</para>
		<para>320 - VerifyEofBofFailure</para>
		<para>322 - VerificationFailure</para>
		<para>328 - INIFailure</para>
		<para>330 - TelnetFailure</para>
		<para>331 - CopyFileFailure</para>
		<para>332 - NoValidParameters</para>
		<para>338 - EventNotExistsFailure</para>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.SetTrickModeSpeed">
	<summary>
   Setting Trickmode Speed And Checkes BOF or EOF
 </summary>
</member><member name="M:IEX.ElementaryActions.Functionality.EAImplementation.VerifyEventBooked.#ctor(System.String,IEX.ElementaryActions.Functionality.Manager)">
	<param name="EventKeyName">Key Of The Event</param>
	<param name="pManager">Manager</param>
	<remarks>
 Possible Error Codes:
 <para>305 - PCATFailure</para>
		<para>328 - INIFailure</para>
		<para>330 - TelnetFailure</para>
		<para>331 - CopyFileFailure</para>
		<para>332 - NoValidParameters</para>
	</remarks>
</member><member name="T:IEX.ElementaryActions.Functionality.EAImplementation.VerifyEventBooked">
	<summary>
   Verify Event Is Booked From PCAT
 </summary>
</member>
</members>
</doc>